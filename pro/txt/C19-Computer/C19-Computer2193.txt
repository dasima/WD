计算机应用研究
APPLICATION RESEARCH OF COMPUTERS
2000　Vol.17　No.2　P.60-62



用Java开发HTTP服务器
万江平　何思遥　吴越　张鹏
摘 要 在对HTTP协议的分析基础上，用Java开发了一个HTTP服务器原型系统，说明了其实现模型，并讨论了多线程及虚拟终端等若干实现问题。
关键词 超文本传输协议 Java 套接字 线程 虚拟终端
1 引言
　　实现WWW的通信协议是HTTP(Hypertext Transfer Protocol，超文本传输协议)，它定义了HTTP的通信交换机制、请求及响应消息的格式等。
2 HTTP模型
　　HTTP协议是建立在请求/响应(Request/Response)模型上的。首先由客户建立与服务器的连接，并发送一个请求到服务器，请求中包含请求方法、URI、协议版本以及相关的MIME样式的消息(包含请求修饰符、客户信息或者可能的内容)。服务器响应一个状态行，包括消息的协议版本和一个成功或失败码，相关的MIME样式的消息(包含服务器的信息，资源实体的信息和可能的资源内容)。
　　大多数的HTTP通信是由于用户启动的，包含一个对某服务器的资源的请求。在简单的情况下，这可以通过在客户和服务器之间的单个连接(V)完成，见图1。

图1　简单的HTTP交互过程
　　复杂的情况是在请求/响应通信链路上有一个或者多个中介体。在这里有三种中介体，代理(Proxy)，网关(Gateway)和通道(Tunnel)。代理是一个转发机构，它接收用户对一个由URI绝对格式标识的资源请求，改写请求的全部或一部分，转发被改变的请求信息到由URI标识的服务器。网关是一个接收机构，作为某些服务器的一个层，必要时，翻译请求成为服务器支持的协议。通道是两个连接的转置点，不改变消息。复杂的HTTP过程见图2。

图2　复杂的HTTP交互过程
　　在图2中，客户和服务器之间的通信链路有三个中介体，请求或响应消息必须经过四个单独的连接。这对某些HTTP通信很重要，因为某些HTTP通信选项只能适用于申请近邻非通道的连接或通信链的端点，或链上的所有连接。这里每一个中介体同时支持多个通信过程。
　　一次HTTP操作称为一次事务(Transaction)。HTTP定义的事务处理由以下四步组成：1)客户和服务器建立连接；2)客户向服务器提出请求；3)如果请求被接受，则服务器送回响应，在响应中包括状态码和所需的文件；4)客户与服务器断开连接。
　　HTTP采用TCP连接，该连接仅在此事务中保持，浏览器和服务器都不会记忆上次的连接状态。HTTP之所以采取这种无状态机制，完全是为了提高服务器的工作效率。在Web中点击一个超链接时，浏览器有可能从当前站点转到另一个站点。因此，当文档传输完毕时，服务器都假定用户要退出对本服务器上的文档的浏览连接，因而断开连接。如果要继续浏览，就再次建立连接。如果用户确实要退出时，服务器就不需要执行任何操作，因为连接已经断开了。
3 用Java开发HTTP服务器
3.1 Java语言网络编程
　　当通信数据到达的是目的主机的网络层，IP地址连同端口号一起，提供了对两台机器之间唯一的、无二义性的连接的标识，这个连接叫套接字(Socket)。一对套接字唯一地标识了每个端口连接：(1)发送方套接字=源IP地址+源端口号；(2)接收方套接字=目的IP地址+目的端口号。
　　Socket类实现基于连接的客户插口。这些插口用于开发应用程序，应用程序利用由面向连接的服务器应用程序所提供的服务。我们可以利用Java API中的java.net包中的插口类提供了套接字功能进行网络编程。
　　Socket类提供四种创建插口并将插口连接到接收方主机与端口的构造函数。访问方法用来访问I/O流及与所连接的插口有关联的连接参数。(1)getInet Address( )－获取插口所连接时信宿机的IP地址；(2)getPort( )－获取插口所连接时信宿机的端口号；(3)getInputStream( )返回与插口相关联的输入流；(4)getOutputStream( )－返回与插口相关联的输出流；(5)close( )－关闭插口。
　　ServerSocket类实现了TCP服务器插口。它提供两种构造函数，用它们指定服务器插口所用的端口，以便监听到连接请求。它的Accept( )方法用来引起服务器插口监听并等待，直到建立了到达连接为止。一旦建立了连接，它就返回Socket类的一个实例。然后该Socket对象用来为单个客户实施服务。
3.2 HTTP服务器功能
　　用Java实现一个Web服务器程序，具备以下的功能：1)支持简单请求和简单响应模式(HTTP/0.9)；2)部分支持完全请求和完全响应模式(HTTP/1.0)，实现