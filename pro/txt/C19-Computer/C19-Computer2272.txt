计算机应用研究
APPLICATION RESEARCH OF COMPUTERS
2000　Vol.17　No.5　P.51-53，106



基于分布环境的电信网络管理系统的设计和实现
毛云峰　董金祥
摘  要  在分析现有的电信网络管理技术的基础上，提出了基于分布环境的网络管理系统体系结构，并对关键技术、具体设计和实现进行介绍。
关键词  电信网络管理  CMIP  SNMP  CORBA
1  引言
　　电信网是由各个时期的多厂商的各种设备组成的异质网络，大量分布在不同地域的各种网元协同工作，为用户提供通信服务。电信网络管理系统提供对这些分散、复杂的通信设备进行有效地管理的手段，从而更好地组织和提供业务。传统的网络管理体系结构主要包括管理者(Manager)、代理(Agent)和网络管理协议三大要素。当前存在的并得到广泛应用的网络管理标准协议主要包括两大类，即：TMN采用的基于OSI的公共管理信息服务/公共管理信息协议CMIS/CMIP (Common Management Information Services/Common Management Information Protocol)；基于TCP/IP网络的简单网络管理协议SNMP (Simple Network Management Protocol)。采用CMIP、SNMP管理协议构造的集中网管平台基本模式相同，都采用管理者/代理模型，对被管理对象进行抽象形成MIB，采用标准的协议来访问管理数据，实现对网元进行监控和操作。这其实是标准客户端/服务器模式。管理者、代理者与被管理对象之间的关系如图1。

图1管理者、代理者、对象之间的关系
　　前期网络管理技术的研究和开发主要集中在网元层的信息模型和管理协议标准化的工作上，取得很大成果。在这些基础上，大量的对网元的监控和操作维护系统被投入使用。但是现有的解决方法有以下不足：注重网元细节，在对象的颗粒度较小时效果较好，但缺乏对更高层次大对象的管理能力；采用“主/从”式集中结构，不太适用业务的端―端(peer-to-peer)交互模式；CMIP/SNMP开发难度较大，实现代价较高。
　　电信业目前较多采用的网络管理规范是ITU-T提出的电信管理网(TMN)。TMN构思中，一个关键是运用面向对象和信息建模(Information Modeling)技术，
对网络中被管理的资源(包括设备和业务)建立抽象模型；管理系统中的所有管理功能都基于网络资源的抽象模型视图(又称公共管理信息)，而不直接和实际资源打交道。按照TMN的逻辑分层体系结构，管理业务由商务管理层(Business Management Layer)、业务管理层(Service Management Layer)、网络管理层(Network Management Layer)及网元管理层(Network Element Management Layer)四个层次组成。以上各层管理职责不一样，上一层通过下一层实现其任务，自上而下形成“金字塔”型管理结构。TMN层次模型大大扩展了传统的网络管理概念，更符合当代电信发展的需要。该模型虽然概念简单明了，但实现非常复杂。ITU-T制定的这些标准，主要关注于网元层和网络层，但对业务和商务层只是给出一些纲领性的建议。这就使得很难采用这些现有的标准来满足要求，迫切需要我们提出新的方法来充实层次模型。
　　在今天，提供强大的电信网络管理直接面临两个挑战：网络的异质性严重和网络规模的不断扩大。目前电信网是由多厂家的各个时期产品组成的典型异质网络，从网络管理的角度来看，目前通信网中有以下几类设备组成：大量网上运行的较早的网元只能提供厂家专有接口；新的通信设备如SDH，ATM等采用ITU-T/OSI标准来构造其网管系统；新的基于计算机技术的网元通常采用SNMP为管理手段。电信网上并存具有这三种管理接口的网元，从而要求网络管理系统有能力来灵活支持具有不同接口的网元。通过在开发网络管理系统的框架中引入“中间件”技术可有效解决这一问题。另一个挑战是电信网正以飞快的速度发展，网络规模迅速扩大，需管理的对象以几何级数的倍数增加，管理功能也要求不断扩充，这就需要有效的分级管理。目前缺乏被广泛采用的管理大批量网元的有效方法。管理大的网络需要高度的抽象来抓住网络状态的基本因素而略去过多的细节。
　　我们可以借鉴TMN的思想，建立通用的信息模型，选择面向对象分布系统，来构造网络管理系统，避免现有网管系统的缺陷。
2  系统体系结构
　　我们参照TMN模型来设计网络管理系统，将注意力集中在功能的实现上，选用成熟、通用的技术来实现管理系统。为满足目前和今后电信网络维护管理和提供更好电信业务的要求，一个现代的理想网络管理系统应符合以下设计目标：实现分布式管理、实现数据的共享、组件可重用、采用面向对象的设计、与现有系统的集成、通用的系统访问界面。
　　通过考察TMN的方案，我们可以看到信息模型在网络管理中的重要性。在网管领域，已有的信息模型都依赖特定的协议和实现技术，在体系结构设计中，我们认为关键是建立一个新的管理信息模型来自然描述网络状态的聚合(Aggregation)。信息模型独立于应用，能被用于大量的管理域。通过该模型，管理人员能按监控的目的“客户化”他们所看到的网络，提供高层结构“组”来隐藏网元；定义被管理对象来描述管理信息的“计算视图”(Computed views)；提供高层监控元语来使管理者在业务层与管理系统交互。
　　系统的总体体系结构如图2所示。

图2网络管理系统总体体系结构
　　该系统结构框图概括地表示了我们系统的总体框架。体系结构分为三层，简介如下：底层为网元管理信息，它们可能驻留在网元或其管理代理中；“中间件层”由一组管理服务器构成，是系统的核心部件；管理应用程序提供某种可视化的方式来表现管理信息和实现管理操作，即客户端程序。分布计算环境提供系统内各部件间的通信。对于已经存在的网元代理，我们不打算把它们替换掉，而是通过“中间件层”服务器以同步/异步方式或通过专有接口聚合底层的数据，提供被管理对象的计算视图。在“中间件层”中，信息按照我们的信息模型进行组织。管理服务器之间的通讯通过分布处理环境提供的服务来实现。其它的管理者或业务系统也可通过分布处理环境，采用直接访问对象或调用系统提供的API的方式来获得系统提供的服务。本文接下来的描述将围绕着这种体系结构展开。
3  关键技术分析
3.1  系统的信息模型
　　在当前的大型网络中管理信息通常分布在网元的MIB中，这种方式造成只描述了这些网元的配置和操作的部分细节方面，而不能把网络作为一个整体来看待。现代的网络管理系统需要对更高层的管理信息和服务进行操作。我们在框架中提出了一个面向对象的信息模型。在该模型中一个对象的属性值可以被定义为在其它属性值上的进行任意计算的结果，后者可以是网元管理代理中的信息或其它通过计算获得的属性。我们的模型可以看作是对基于协议的模型中结构化管理信息SMI (Structuring management information)如SNMP SMI、CMIP GDMO的扩展。
3.1.1  管理信息的计算视图
　　我们可以通过在从网元中收集的管理信息上施加聚合操作来构造计算视图。在我们的框架中每个计算视图保存在一个对象中，并且有一个或多个以下部件：
　　．监视视图：负责对网络状态提供高层描述；
　　．控制视图：描述为高层网络管理服务提供的控制界面。
　　对象的属性能很好地表示对象监视视图和控制视图描述的网络状态。我们可以通过说明参与计算的每个属性的聚合规则来定义新的计算视图。聚合可以基于空间和时态。
　　(1)空间聚合
　　空间聚合通过引入网元组来减少分布在大量网元中的管理信息量。通过定义恰当的组，管理者可以获得网络配置和性能等的高层视图。为有效地描述空间聚合，用户可按地理位置、功能或两者组合来动态定义组。当存在网络配置数据库时，组的成员关系可通过网元属性符合某一查询条件来容易地定义。一个组可以被定义为另一个组的成员。这样，每个网络的组的层次形成一棵树，树的叶子节点为网元。每个组有一个与树的深度关联的级别标志。Level 0代表网元代理，属于Level n的组可包含Level n-1, ..., Level 0组。一旦组的层次被定义好，我们可以参照组而不是网元来定义高层管理视图和服务。
　　为计算与某个组关联的属性的值，组必须被分解成包含所需属性的一系列网元代理中。分解可看成是组的形成的逆过程。当信息部件被确定，它们的值被取得，然后属性的新值通过计算得到。同样，在组施加的控制操作也被映射为对组的部件的一系列控制操作。
　　(2)时态聚合
　　时态聚合揭示管理信息的时态变化性质。为计算某时态聚合，信息被周期性采集后作为输入提供给聚合函数。这一过程也可被用于自动采集。
3.1.2  属性的声明和解析
　　对象的属性可通过声明来描述，属性通常和一个组的列表关联。为计算属性的值，组的(Groups)列表被进一步展开为一系列描述计算视图的其它对象(Objects)或指向网元代理中信息的指针。当需要的属性(Attribute)值从每个对象中取得后，采用一个过滤函数(Filter function)来计算最终结果。例如SUM操作汇总取回值并把结果保存为新的属性值。
　　通常，每个属性可以采用以下公式来表示：
V=f{(G1,o1,a1),(G2,o2,a2), ...,(Gn,on,an)}
　　式中f表示过滤函数，Gi为组，ai是属性名，oi为一对象选择谓语，用于从组内选择包含被采集属性的管理对象(MOs)。依靠底层管理协议，对象和属性选择谓语将被说明为不同的语法来适应网元代理中的特定管理信息结构(如SNMP或CMIP)。
　　过滤函数通过引用(Reference)来说明和调用。在这种情况下所需的代码段可以从一外部的函数字典中动态调入。这种方法的优点是过滤函数不需和管理服务器集成在一起，可以在不影响管理系统运行的情况下修改提高原有函数或定义新函数。
　　与已有的模型相比(如OSI)，我们的信息模型建立在已有的模型结构的基础之上，提出视图和聚合的概念进行扩展。通过提供过滤函数来简单地声明对象的属性，隐去了传统实现方法的编程开销。虽然从理论上讲，该信息聚合模型独立于实现技术，但从前面的讨论中可以看到其实面向对象和分布处理的思想已贯穿了我们的信息模型设计过程，采用分布对象处理技术能使我们模型的优越性得到更好的体现。
3.2  分布计算模型
　　在总体体系结构设计中，我们指出网络管理系统由管理服务器群组成，这些管理服务器通过分布计算环境联系在一起。管理服务器的数量和位置的设定可根据管理的需要来决定。例如我们可参考TMN的子网概念来构造管理服务器群的体系。如图3，最下层管理者(Level 1)采用某种标准协议从网元代理中收集数据，它们完成的功能和TMN的子网层相近。上一层的管理者能针对网络层和业务层生成管理视图，访问该管理服务器可获得高层的服务。

图3管理服务器的层次组织
　　由于历史的原因，电信网上运行的大量设备不提供基于标准协议的管理系统和管理接口，短期内这些设备不可能退出通信网。我们的方法是设计一个适配器，采用“包装”处理，即在现有系统外提供管理对象，在该对象上实现定义的标准接口，然后将这些接口映射到现有系统的操作上。对于上层管理系统来说，它们不用关心到底MIB数据是在网元中，还是在适配器中，只需要通过标准的接口来访问这些数据，执行管理操作。
　　为有效管理和组织被管理对象和管理服务器，采用了一个统一的外部字典来储藏每个管理者的拓扑和配置信息。这是我们的分布式结构中唯一的集中部件，通过对该字典的搜索，每个管理者可以找到其父亲、兄弟和子孙管理服务器。通过前面步骤获得其它管理服务器的入口指针后，管理者能访问其它服务器和它们的对象。
4  实现技术
　　下面我们简介基于分布对象技术的管理服务器的具体实现。当前的分布对象计算环境主要有两大阵营：OMG的CORBA和Microsoft的DCOM。考虑到DCOM和CORBA的互连可通过网关或桥接技术实现，选择独立于某一特定厂家，在通信领域得到大量应用的CORBA技术是更合乎逻辑的。采用CORBA技术，有利于平滑地融合专有网管系统；提供跨不同管理技术的端―端管理；保护已有的在管理信息模型、已使用的管理系统上的投资。
　　对于CORBA技术和传统网络管理技术的结合需解决两类问题：两个管理域间管理对象的转换；管理操作到CORBA服务的转换。它们都属于两个管理域之间的映射。目前对此有两种解决方案：静态和动态的方法。由于国际组织JIDM(Joint Inter-Domain Management)组制定的静态解决方法已相当成熟，我们的系统采用静态的翻译方法。
　　管理服务器的实现如图4，管理服务器由一系列的子系统构成，对前面已描述过的部件，我们对其作简略说明，重点介绍Web技术在本系统中的应用。

图4管理服务器的结构
　　在管理服务器中，核心部件是对象。对象被储存在数据库中。每个对象都采用CORBA的定义来实现，对象按继承关系组成树，并使用CORBA的命名服务(Naming service)来区分。一个外部配置字典被用于储存整个系统的信息(如管理服务器群拓扑、组的定义等)。与对象数据库紧密相连的是聚合处理引擎，该引擎包括从外部采集数据的协议适配器，并以前面说明的方法来计算属性值。对于从CMIP/SNMP代理中采集数据，采用JIDM定义的CORBA到标准协议映射规则。生成一系列的转换构件“插”到ORB总线上。管理系统之间的通讯采用CORBA的标准IIOP进行。
　　对于网络管理系统的另一重要组成部分―用户界面，目前一个流行的趋势是采用Web技术进行“瘦客户端”管理。通常，Web技术开发的网络管理应用有管理简单和使用方便等优点，然而，Web技术也有其局限性而不能完全替代现有的网络管理应用程序，尤其是对于电信网络管理这种通常在大型网络操作中心运行的系统，原因如下：
　　(1)大型网络管理系统需要一个很大的显示区域来显示反映网络不同逻辑视图的拓扑地图。而现有的Web技术在多页面间进行相互访问上提供的支持很少；
　　(2)Web页面需要从服务器上下载大量的代码和状态信息。因此，与传统的集中式网络管理系统相比，Web所能提供的显示信息的速率要慢得多；
　　(3)JAVA安全模型不允许客户(APPLETS)使用一些本地资源(如文件系统，与其它服务器的网络连接等)，为了传送这些信息而浪费了大量的带宽和服务器的计算能力。
　　为解决这些问题，我们采取混合传统GUI和Web技术的解决方法。具体来说，就是需要强大图形能力的如网络的拓扑图显示、告警(事件)分析定位等传统关键任务使用C++开发；对于实时性要求不太高的如性能分析和某些配置操作，采用Web技术来实现。出于性能考虑，我们在管理服务器内部集成了一个HTTP服务器，从客户端来的HTTP请求被转化为对对象方法的直接调用，结果直接返回到浏览器中。通过这种方法，避免传统的类似CGI等技术的低效问题。
5  结论和展望
　　本文提出的技术具有通用性，独立于具体应用。我们应用这些技术开发了第一个电信网络管理系统：杭州市本地网交换网管监控系统。该系统在较短时间内完成，已投入运行。通过使用该系统，实现了程控交换机维护的无人和少人值守，提高了工作效率。这也验证了前面提出的系统结构和模型具有一定的先进性和易于实现，其应用前景是不容怀疑的。
　　当前的电信网和通信技术还处在飞速发展的过程中，而网络的复杂性、服务的多样性和用户对网络管理的需求也正在逐步提高。因此，到目前为止，本系统的设计和开发工作只能说是告一段落，远未到彻底完成的阶段。考虑本系统今后的发展，将致力于解决以下问题：
　　(1)进一步完善系统的功能，接入其它网元；
　　(2)对已实现系统的各模块进行优化和进一步增强程序的功能，并形成可重用的构件；
　　(3)采用完全的“瘦客户端”方式提供方便的系统访问的手段。
毛云峰(浙江大学CAD&CG国家重点实验室  杭州 310027)
董金祥(浙江大学CAD&CG国家重点实验室  杭州 310027)
参考文献
1，Y. Yemini, G. Goldszmidt and S. Yemini. Network Management by Delegation, 2nd Int. Symposium on Integrated Network Management, April 1991
2，Object Management Group, Corba-based Telecommunication Network Management System, OMG White Paper, May 1996
3，TeleManagement Forum, SMART TMN Technology Integration Map, TMF (NMF) Issue 1.1 October 1998
收稿日期：1999-12-17
