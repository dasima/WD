软件学报
Journal of Software
2000 Vol.11 No.1 P.95-103



分布式实时系统中的预测调度算法
许建峰　朱晴波　胡宁　谢立
摘　要　对于分布式实时系统中的周期性任务,人们提出了一系列静态分配调度算法,有效地解决了各种特定条件下的任务分配和调度问题.这些算法的主要特点是,它们均要求被调度任务的特征参数为已知条件.然而在很多实时系统中,周期性任务的运行时间或任务数量常常是一些具有一定规律的随机过程,因而上述静态算法的效能将受到限制.在分析了特定应用背景中的处理流程之后,抽象得到两类随机任务模型,针对这两类模型介绍了在分布式实时系统中已经得到应用的静态分配调度算法SAA(static allocation algorithms),进而提出了多任务分配调度的预测算法PAA(predicting allocation algorithm).它根据周期性任务执行时间或子任务数量的统计特性,实现任务参量的合理预测和多任务的动态调度,以提高系统的实时性能.仿真结果表明,对于两类任务模型,PAA算法与SAA算法相比,在任务完成时间、负载均衡度、系统响应时间及任务夭折率等多方面均有显著改善.
关键词　分布式实时系统,周期性任务,分配调度算法,预测.
中图法分类号　TP316
Predicting Allocation Algorithm in Distributed Real-Time Systems
XU Jian-feng　ZHU Qing-bo　HU Ning　XIE Li
(State Key Laboratory for Novel Software Technology　Nanjing University　 Nanjing　210093)
Abstract　For periodic tasks in a distributed real-timesystem, a number of static allocation algorithms have been developed which solve the problem of assigning and scheduling tasks effectively under some determined conditions. The principal limitation of these approaches is that the attributes of the tasks have to be known. Sometimes the execution time or the number of subtasks of a periodic task might be a stochastic process obeying some rule. In such cases, the performance of the static schemes will decrease greatly. According to the analysis of the processing in specific application fields, the authors model two types of random tasks in distributed real-time systems and introduce the static allocation algorithms (SAA) which have been applied in engineering for the two task models separately. On the basis of SAA, a predicting allocation algorithm (PAA) is presented for the assignment and the scheduling of multitasks in distributed systems. The proposed algorithm, depending on the statistic features of the task execution time or of the number of subtasks included in the tasks, can predict the task parameters reasonably and implement dynamic allocation of the tasks, so that the system can meet the timing requirements more efficiently. The results of the simulation of the two task models have shown that compared with SAA scheme, the performance of PAA is significantly better in task finishing time, load balancing, system response time, ratio of discarded tasks, etc.
Key words　Distributed real-time system, periodic task, allocation algorithm, predicting.
　　在实时多任务系统中,人们既关注事件(event)或任务(task)之间逻辑关系的正确性,也关注系统能否在指定时间内响应各种事件,完成相应的处理任务,这就是系统的实时性问题.当构成系统的硬件设备性能完全确定后,影响系统实时性的便是软件设计中所采取的各种策略和算法.对单机系统而言,设计实现合适的任务调度(scheduling)算法是提高系统实时性能的关键所在；对于分布式系统,由于存在多个处理节点(processing node,简称PN),除了每个PN上的调度算法以外,各个任务在多个PN上的分配(assigning)方法也会在很大程度上影响实时性,所以在分布式实时系统中,多任务的分配调度(allocating)问题一直受到人们的关注.然而,即便是一些最简单的情形,多任务的最优化分配调度问题也是NP难题［1］.因此,在研究过程中,常常需要作出一系列假设,进而获得这些假设条件下的优化算法.
　　一般地,实时系统中的任务可以分为周期性的(periodic)和非周期性的(aperiodic)两大类,对于周期性任务,人们考虑最多、也最为成熟的便是静态算法(static algorithm)［2～10］.在一系列静态算法中,有的着重于使整个系统取得最小的计算与通信负载［5］；有的力求使处理机之间的负载相对均衡［6,7］；有的则以使各个PN中的最大计算时间取得最小值为目标［8～10］.这类静态算法的主要问题是,它们均要求被调度任务的特征参数,如运行时间、所含子任务数量、彼此之间的前驱和后继关系、通信关系及通信信息量等为已知,当这些参数未知或变化范围较大时,这类算法便难以达到目标.对此人们开始引入进化算法,其主要思想是,在实时任务对资源需求呈较大幅度变化的条件下,根据实际需求的连续性,逐次递推出每一周期各个任务对资源需求的估计值,以此作为任务调度的依据,这方面的工作已经取得了一些有效的结果［11］.目前算法中的不足之处是递推函数的建立有较大的随意性,因而估计值与实际参数之间的偏差难以控制,故不适用于实时性要求比较高的系统.
　　在很多实时系统中,周期性任务在运行时间或子任务数量上常常呈现出具有一定规律的随机性,本文分析了特定应用背景中的处理流程,抽象得到两类随机任务模型,针对这两类模型介绍了在分布式实时系统中得到应用的静态分配调度算法SAA(static allocation algorithm),进而提出了多任务分配调度的预测算法PAA(predicting allocation algorithm).它根据周期性任务执行时间的统计特性,实现多任务的动态调度,以解决随机任务的实时性问题.我们给出了在一些条件下SAA与PAA的算法仿真结果及性能分析,最后给出结论,并提出进一步工作的方向.
1　任务模型
　　现代信息处理系统如雷达、超声诊断仪和CT等,常常需要面对具有以下特性的信号序列：周期性――由于传感器周期性地采集外部信号,在信息处理中可以认为信号的到达是等周期的,或可近似为等周期的,我们称这种周期为帧(frame)；随机性――由于外部环境的变化和测量噪声的存在,各种信号无论在数量上还是在属性上都具有很大的随机性；相关性――单帧信息难以完整地反映信号的属性,但连续数帧内的信号表现出较强的相关性.
　　对这类信号进行的处理,不能仅仅孤立地对当前帧进行,而必须综合考虑到前后各帧信号数据的特征,才能确定它们的具体属性,这就是在信息处理系统中广为采用的相关处理.例如,在雷达信号和数据处理中,多对象、多层次的相关处理同时存在,使整个信息处理过程可被视为一系列相关处理的组合.下面以雷达目标检测过程为例来描述相关处理的主要特征.
1.1　检测原理
　　一般地,在提取真实目标信息的过程中,设第i帧输入信号为Si,它包含若干组超过门限的量测记录,即

其中Rij是一个量测记录,含有距离、速度、方位、俯仰及幅度等参量;ni为第i帧输入的量测记录数,它在0与某一上限之间随机变化,故序列｛Si｝为一随机过程.由于信号采样方式的限制以及信号中可能含有噪声、杂波和真实目标等多种信息,对于信号属性的判断必须根据下述检测原理进行.
　　检测原理　Rij为目标数据的充分必要条件是：除第i帧信号外,在与第i帧序号之差不超过K的2K帧信号中,存在不小于N(≤K)的L帧信号,其中的L个量测记录Ri1j1,Ri2j2,...,RiLjL满足

这里,K和N均为正整数,D为相关判别函数,G为相关门限,这些参量均由具体的物理模型确定.
　　根据检测原理,Si中的每个量测记录都必须与Si-K,...,Si-1,Si+1,...,Si+K中的各个量测记录进行相关处理,才能获得其真实属性.在实际处理过程中,对第i帧信号Si,我们视前K帧信号为一个完整的相关窗,将Si中每一个量测记录与前K帧信号中每一个量测记录进行相关判别处理.由于相关窗总是随着新的帧信号的输入而不断后移,所以我们就能够实现上述Si与前后个2K帧信号相关的要求,这样的相关过程称为滑窗相关处理,其Petri网模型如图1所示.

Fig.1　Petri net model o fmoving windows correlation processing
图1　滑窗相关处理的Petri网模型
　　此Petri图中各个位置的具体涵义如下.p0：当前帧信号到达；pi：当前帧信号与前K-i+1帧信号的相关处理(0＜i≤K)；pj：前K-j+2帧信号取代前K-j+1帧信号(K＜j＜2K)；p2K：当前帧信号取代前一帧信号；p2K+1：等待下一帧信号.
　　根据上述处理过程及模型的描述,我们可以得出滑窗相关处理的主要特征如下.
　　(1) 若将Si与前K帧信号的相关处理视为一个完整的任务Ti,则由于Si的到达是周期性的,所以Ti也是周期性的任务.
　　(2) 由于Si与Sj的相关处理包含了ni×nj次彼此之间先后顺序无关的相关函数的计算与判别,所以,若将每一次计算与判别定义为一个子任务,则对于当前帧为Si、滑窗宽度为K的相关处理任务Ti,它包含的独立子任务数为

为保证此表达式在边界情形下的正确性,我们假定

1.2　任务模型
　　根据上述特征,我们将考虑以下两类包含N个PN的分布式同构系统中的任务模型.
　　Ⅰ类模型――系统以T为周期,每帧需要完成J个相互独立的任务T1,T2,...,TJ,在此我们不考虑通信及其他资源问题,故假设每个Ti在任意一个PN上的执行时间是相等的,都为一随机过程｛Ci(k)｝,即Ti在第k帧内的执行时间为Ci(k),它仅在第k周期结束时才成为已知,并且相邻或相近帧上的Ci(k)之间具有相关性(i=1,2,...,J).
　　Ⅱ类模型――系统以T为周期,每个帧需要完成J个相互独立的任务T1,T2,...,TJ,其中每个Ti又包含ni(k)个子任务ti1,ti2,...,tini(k)(i=1,2,...,J),这里ni(k)是第k帧内Ti中的子任务数,它在一定范围内随机变化,仅在第k周期结束时才成为已知,故｛ni(k)｝为一随机过程,且相邻或相近帧内的ni(k)具有相关性.同样地,由于不考虑通信及其他资源问题,我们假设每个Ti中的所有子任务在任意一个PN上的执行时间都是相同的,设为Di(i=1,2,...,J).
2　静态算法SAA
　　在分布式系统中进行任务分配调度的主要准则是：每一帧内系统的任务完成时间以及对外部事件的总响应时间应尽可能取最小值.由于任务完成时间取决于系统中最后完成所有任务的PN的执行时间,所以使其取最小的目标可以通过任务在各个PN上的合理分配来实现.另一方面,我们可以将每一任务的完成视为对外部事件的一次响应,定义各个任务的等待时间之和为系统的总响应时间,当任务在系统中的分配确定以后,各个PN上进行合理调度的主要目的便是减小响应时间.因此,分布式实时系统中周期性任务的分配调度分为两个步骤：首先是确定每一帧内任务在各个PN上的分配策略,其次是确定各个PN对分配在其上的各个任务的调度策略.
　　如果在上述两类任务模型中排除随机因素,即Ⅰ类模型中任务的执行时间及Ⅱ类模型中各任务所含子任务数均为常数,所得到的就是分布式系统中最为简单的多任务情形,此时可以根据已知参数预先确定分配和调度策略,这就是静态的SAA算法.下面,我们分别描述两类模型的SAA算法,它是我们引入PAA算法的基础.
2.1　基于Ⅰ类模型的静态算法SAA(Ⅰ)
　　由于N和J均为常数,所以,对于