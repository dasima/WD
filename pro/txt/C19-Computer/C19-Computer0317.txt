软件学报
JOURNAL OF SOFTWARE
1999年　第10卷　第11期　Vol.10　No.11　1999



基于故障划分的并行测试生成算法
曾芷德　曾献君
　　摘要　文章从理论上分析了提高基于故障划分的并行测试生成算法的加速比的途径.在此基础上，提出了把相关故障识别和最短路径敏化相结合的基于输出扇入锥的逆向故障划分方法BFPOC（backword fault partitioning of output fan-in cones），并把该方法与Banejee推荐的基于输入扇出锥的正向故障划分方法TFPIC（toword fault partitioning of input fan-out cones）和常用的基于故障顺序的等步长划分方法EDPFS（equal distance partitioning of fault sequences）进行了实验比较.结果表明，在大规模并行处理环境下，BFPOC方法比后两种方法有明显的优势，能获得更高的加速比.
　　关键词　并行测试生成，故障并行，故障划分，输出扇入锥，输入扇出锥，加速比.
　　中图法分类号　TP338
A Parallel Test Generation Algorithm Based on Fault Partitioning
ZENG Zhi-de　ZENG Xian-jun
(Department of Computer Science　National University of Defense Technology　Changsha　410073)
　　Abstract　 In this paper, the authors analyze in theory how to increase the speed-up ratio of parallel test generation algorithm based on fault partitioning. The approach of backward fault partitioning of output fan-in cones (BFPOC) which combines the relevant fault recognition and shortest path sensitization, is presented. And BFPOC is compared via experiment with the approach of toward fault partitioning of input fan-out cones (TFPIC) proposed by Banejee and the general one, equal distance partitioning of fault sequence (EDPFS). The experimental results show that in large-scale parallel processing environment, BFPOC can reach higher speed-up ratio, obvious super to the other two approaches.
　　Key words　Parallel test generation, fault parallelism, fault partitioning, output fan-in cones, input fan-out cones, speed-up ratio.
　　借助并行处理的优势来对付VLSI测试生成时间的指数复杂性是一种可供选择的方法［1］.大规模并行处理机（MPP）的问世和工作站机群（WSG）的广泛配置，为并行测试生成的实现提供了良好的硬件环境.但是，要把测试生成这类原本属于串行处理的算法改造成可并行运行的算法并非易事.
　　近10年来，国内外学者除了继续致力于提高单机测试生成系统效率的研究［2,3］以外,还进行了多机并行测试生成算法的研究，并先后提出了基于故障并行、启发式并行、搜索空间并行、功能并行和电路并行等多种并行测试生成方法，也报道过一些关于并行测试生成的原型系统.例如，按初级输入扇出锥对电路故障进行集束分组的并行系统［4］、按启发式并行的系统［5］、对难测故障按搜索空间并行的系统［6］以及对时序电路分别按故障并行［7］、按搜索空间并行［8］和按电路并行［9］的系统等等.这些系统参与并行处理的处理机数目为5～16，属于小规模并行.它们的共同特点是比较重视处理机之间的动态负载平衡.众所周知，实现动态负载平衡是以增加处理机之间的通信开销为代价的.理论上不难证明，实现N个处理机的动态负载平衡所需通信开销的时间复杂性为O（N2）.这表明对MPP系统（N≥128），靠实现动态负载平衡来提高加速比可能会有困难.为此，我们建议把研究重点放在如何提高静态负载平衡上，以减少依托MPP机的并行测试生成系统的通信开销，提高加速比.我们曾提出过按逻辑相关性的大小，把被测电路（CUT）原有的以初级输出（PO）为锥顶的P个输出扇入锥分配给N个处理机，进行并行处理的优化划分算法――最小递归二分法［10］，收到了较好的效果.但是，对那些反馈线很多、反馈深度很深的闭环电路，每个输出锥基本包含整个电路.此时再试图将电路按输出锥分块将是徒劳的.因此，本文研究依托MPP机的基于故障静态划分的并行测试生成算法.
1　关于故障并行的加速比
　　假设m×n阶矩阵（aij）为CUT的故障检测矩阵，其中j=1,2,...,n与CUT的目标故障集SF中的n个故障对应，i=1,2,...,m与检测SF的完全测试集ST中的每个测试码相对应.

　　我们的任务是把SF中的n个故障平分给N个处理机进行并行测试生成，希望获取最高的加速比.此任务可形式化描述如下：
　　把矩阵（aij）按列均分成N个m×n/N阶的子阵（bKil），其中i=1,2,...,m；l=1,2,...,n/N（或(n/N）+1）；K=1,2,...,N.由于此时（bKil）中包含了一些全零行，按行压缩掉这些全零行之后，有i=1,2,...,mK，如果假设max{mK }=M，则加速比
SP＝m（tg+tf.mfs)/(M(tg+tf.mfp)).
(1)
　　式(1)中，M≤m，tg为生成一个测试码所需的平均时间，tf为一个测试码模拟一个故障所需的平均时间.它们由CUT的复杂性及所用的测试生成（TG）和故障模拟（FS）算法决定，与故障划分无关.mfs和mfp分别为在串行和并行生成环境下，一个测试码平均需要模拟的故障数.为了便于分析，我们假设ST中的m个测试码完全覆盖SF中的n个故障，每个测试码都检测n/m个故障，于是可以导出
mfs＝n（m+1）/2m,
mfp＝n（M+1）/(2N.M),
SP＝N（m（2tg+tf.n）+tf.n ）/（M（2tg.N+tf.n）+tf.n）.
(2)
　　式(2)中，只有M与故障划分方法有关.显然，如果在对（aij）按列划分时能使M取最小值，则SP为最大值，可获得最高的加速比.
　　 如果在对SF划分时（aij）是已知的，则获取最高加速比的故障划分可抽象化为纯数学问题：从矩阵（aij）的CNn种列组合中选取使M最小的列组合.此问题用模拟退火法或最小递归二分法都不难解决.但是，由于进行故障划分时尚未求出ST，（aij）是未知的，上述方法暂时还用不上.不过，上述分析已给了我们一条极重要的启示：具有最高加速比的划分，必须是能使每个处理机所分得的故障集的完全测试集最小（即M最小）的划分.为此，在进行故障划分时必须充分考虑故障的等价性、相关性和独立性.
　　VLSI中的故障，按检测每个故障的完全测试集的相关性，可以分为等价故障、相关故障和独立故障.设Tα，Tβ分别为固定故障α，β的完全测试集，如果存在
Tα＝Tβ，则称α,β为等价故障；
Tα≠Tβ，但Tα∩Tβ≠∮，则称α,β为相关故障；
Tα∩Tβ=∮，则称α,β为独立故障.
显然，按上述定义，不可测故障属于独立故障.考虑到测试生成系统（test generation system,简称TGS）在生成CUT的目标故障表时，对等价故障已进行了识别和归并处理，因此,在划分故障时不再考虑等价故障.
　　为使并行测试生成算法获得较高的加速比，划分故障时应遵循下列3条基本原则：
　　(1) 相关故障优先分配给同一个处理机；
　　(2) 独立故障优先分配给不同的处理机；
　　(3) 各处理机处理的相关故障集的个数及故障总数基本相同.
2　3种故障划分方法
　　不言而喻，相关故障和独立故障的识别是故障划分的关键.本文提出BFPOC(backword fault partitioning of output fan-in cones)方法，并与文献［1］推荐的TFPIC(toword fault partitioning of input fan-out cones)方法和较常用的EDPFS(equal distance partitioning of fault sequences)方法进行比较，分析它们的优劣,现分述如下.
2.1 基于输出锥的逆向划分方法（BFPOC）
　　该方法的基本思想是把相关故障的识别与最短路径敏化［11］的思想相结合.具体描述如下.
　　(1) 功能块故障分组规则
假设功能块输出s-a-0故障的组号为k，s-a-1故障的组号为k+1，根据功能块的功能、故障相关性和最短路径敏化思想，对其输入故障以及与输入相连的扇出源故障打分组标记：
　　〈1〉 或（或非）门
　　① 级别最低的输入和它们的先行扇出源的s-a-0故障都标记k（k+1），s-a-1标记k+1（k）；
　　② 设其他输入共有i个（i=1，2，...），则这些输入的s-a-0和它们各自的先行扇出源的s-a-0分别标记k+2（k+3），k+4（k+5），...，s-a-1则标记k+1（k）.
　　〈2〉 与（与非）门
　　① 级别最低的输入及其先行扇出源的s-a-1都标记k+1（k），s-a-0标记k（k+1）；
　　② 设其他输入共有i个（i=1，2，...），则这些输入的s-a-1和它们各自的先行扇出源的s-a-1分别标记k+3（k+2），k+5（k+4），...，s-a-0则标记k（k+1）.
　　〈3〉 驱动（非）门
　　此门输入的先行扇出源s-a-0标记k（k+1），s-a-1标记k+1（k）.
　　〈4〉 对称输入的复合门
　　① 对与或（与或非）门，同一与门输入故障分组规则同与（与非）门，不同与门的对称输入s-a-1分在同一组.
　　② 对或与（或与非）门，同一或门输入故障分组规则同或（或非）门，不同或门的对称输入s-a-0分在同一组.
　　〈5〉 其他功能块
　　① 对级别最低的输入a，检查输入/输出连通矩阵.如果是同相连通，则a及其先行扇出源线s-a-0标记k，s-a-1标记k+1；反相连通，则a及其先行扇出源线s-a-0标记k+1，s-a-1标记k；双相连通，则随机地按同相或反相对待；
　　② 对其他输入bi(i=1,2,...)，如果是同相连通，则bi及其先行扇出源的故障s-a-0（1）的组号为k+i+1（k+i+2）；反相连通，则为k+i+2（k+i+1）；双相连通，则随机地按同相或反相对待.
　　(2) 电路故障分组过程
　　从最复杂的初级输出（PO1）开始，向初级输入（PI）逆向遍历该输出锥的每一个功能块.按上述规则，在每个功能块输出故障组号的基础上，对它们的输入及其先行扇出源的故障分组.逆向最短路径敏化思想已隐含在其中.
　　(3) 故障组号分配算法
　　〈1〉 同一个故障只分配一个组号，不同故障的组号不允许重迭.按此原则，各输出锥之间公共的故障只分配一次组号.
　　〈2〉 为避免不同故障的组号重迭，本文提出故障组号分配算法如下：
　　① 一条引线分配两个邻接数字作为两个故障的组号，即使某条引线的一个或两个故障已被等价归并掉.这里的“引线”包括PI，内部功能块的输出线和扇出个数大于1的扇出源的扇出分线.
　　② 按功能块故障分组原则判明属于同一组的故障，组号向最小的取齐；不属于同一组的故障，保留原组号不变.
　　(4) 按上述规则，编在同一组的故障构成一个相关故障集；不同组的故障的相关性和独立性，要想精确描述将比较复杂，但总的趋势是独立性大于相关性.
　　(5) 故障向处理机分配原则：同组故障应分配给同一个处理机，不同组故障应分配给不同的处理机，除非考虑处理机负载平衡需进行调整时例外.当处理机数