微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000　Vol.19　No.4　P.29-30



Ｊａｖａ２的安全体系及其应用
金胜昔　步俊杰　吉逸
摘 要： 分析了Ｊａｖａ安全体系的演化过程，介绍了Ｊａｖａ２的安全体系的框架及其新特性，指出了Ｊａｖａ２安全体系的概念及其运行机制，并详细地讨论了关于Ｊａｖａ２安全性的一些应用。
关键词： Ｊａｖａ２ 安全体系 保护域
　　自从Java技术开始应用以来，人们对Java平台的安全性以及由于部署Java技术所引发的安全问题给予了极大的关注。特别是在1998年11月Java2发布后，Java的安全体系结构发生了根本的改进，对于终端用户而言，它可以保护文件和私人数据不被恶意的程序或病毒感染和破坏，鉴别代码提供者的身份。对于开发者而言，通过使用API方法，能够将安全性功能集成到应用程序中，因为API的体系结构能够定义和集成对特定的资源的使用权限、加密、安全性管理、策略管理，并提供了一些类来管理公钥／密钥对及信任用户群的公钥证书。同时系统管理员、开发者和用户可以使用它提供的工具管理钥匙库，在JAR文件中生成数字签名、签名的完整性检测、创建和修改策略文件。按照Java设计者的观点，Java安全包括2个方面的内容，首先将Java作为一种安全的平台提供给用户，在此平台上，可安全地运行Java程序；其次提供用Java编程语言实现的安全工具和服务，它使得诸如企业界这样一些对安全非常敏感的领域也可应用Java技术。本文将就这二个方面介绍Java2的安全性新特性及其应用。
1　Java安全体系结构的演化
　　Java从发布以来就通过一系列机制来实现其安全性。首先，Java语言被设计为类型安全的且便于使用的，它通过自动内存管理、内存垃圾回收及字符串和数组的越界检查等语言特性来减轻程序员的编程负担和出现错误的可能性。其次通过编译器和字节码校验器保证Java字节码的合法性，以及类装载器保证命名空间的独立性。最后，对重要系统资源的访问通过Java虚拟机来传递，并由SecurityManager类进行预先检查，这种最初的安全模型称为沙箱模型。沙箱模式提供了受限的环境，运行从网络下载的不可信任的代码，本地代码是可以信任的，对系统资源有完全的访问权限，从网络下载的代码是不可信任的，只有访问沙箱中提供的有限资源。1．0的安全性过于限制，例如程序员希望在执行过程中能在客户机上存储一些持久的信息数据，那么1．0的安全体系会令其失望。
　　从JDK1．1开始提出了签名的Applet的概念。如图1所示，JDK1．1的安全性是基于可以信任的数字签名，一个数字签名的JAR文件中包括身份认证证书和确认，证书说明是谁对程序进行签名，确认说明在程序进行签名后没有被他人改动。用于检验签名的公钥是可信任的，一个有着正确数字签字的Applet，如果它的签字被接收该Applet的最终系统确认为是可信的，则这个Applet被认为是可信代码，具有本地代码完全访问的资源能力，未签名的Applet仍然运行在沙箱中。签名的Applet将分别和它们各自的签名一起存放在1个签名的JAR文件中，并在网络中传输。在JDK1．1中已经包含了数字签名算法，信息摘要算法、密钥生成算法的实现。

图1 JDK1．1安全模式
　　JDK1．2对1．1作了一些改进，它的安全模式可以允许网络管理员对于签名的代码选择性地释放原始沙箱的某些限制，网络管理员可以提供创建自定义的沙箱来实现更加灵活的安全策略。被置于自定义沙箱中的类在装载时仍然基于数字签名。在新的安全模式中无论是本地的或远程的代码，都能够被赋予安全性策略，在安全性策略中定义了1组权限，用户和系统管理员能够配置和管理这组权限。对于签名的代码，每个权限定义了可以访问的资源，如：读写特定的文件或目录、连接访问器和端口等。运行时系统将代码按照域进行管理，每个域都包含有1组类，它们的实例被赋予了相同的1组权限。1个域可以像原始的沙箱模式一样进行管理，所以Applet仍然能够运行在用户和管理员希望的受限环境中，缺省情况下，Application仍然像原来一样可以不受限的运行，同时也可以通过对其赋予一定的安全性策略后进行优化。总之，安全性在一开始就被考虑到在Java虚拟机和核心库的体系结构中，最初的安全体系结构是不灵活的而且难以定义，Java2的安全性框架的目标是达到更强的灵活性和易于定制。
2　Java2的安全性新特性
　　Java2采用了如图2所示的新的安全体系结构，并基于这种安全体系结构提供了很多新特性。

图2 JDK1．2安全模式
2．1　密纹访问控制
　　这种能力从一开始就在JDK中存在。但要使用它，应用程序的编写者不得不做大量的编程工作