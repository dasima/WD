计算机工程
COMPUTER ENGINEERING 
1999年 第25卷 第5期 Vol.25 No.5 1999



数字交叉连接设备的网络管理系统
向海明 熊齐邦
摘要 简述了数字交叉设备（DXC）的基本概念，详细描述了用于管理一个DXC的住处模型，介绍了DXC的网络管理等级，并且提出了一个根据住处模型而建立的DXC的网络管理系统。
关键词 数字交叉连接设备 网络管理 监控器
Network Management System of DXC 
Xiang Haiming Xiong Qibang
（Computer Department of Shanghai Tiedao University Shanghai 200331）
[Abstract] The article brifly states the basal concept of DXC，and paricularly described information model for managing a DXC，and introduces the network management grades of DXC，and advances network management system which is built according to the information model
[Key words] DXC；Network management；Monitor
1 DXC简介
　　随着电信网的发展，传输系统的种类越来越多，容量越来越大，网络也越来越复杂。按照传统，将不同种类和容量的传输系统在人工数字配线架上互连的方式不仅效率低、可靠性差，而且无法适应传输网网络配置和管理的动态变化的要求，因而出现了相当于自动数字配线架的DXC设备(当然其功能已远不限于此)。这是一种具有1个或多个准同步数字体系(G.707)信号端口，并至少可以对任何端口信号速率(和/或其子速率信号)与其它端口信号速率(和/或其子速率信号)间进行可控连接和再连接的设备。
　　一个传统的DXC可以用图1来表示，其接入端口(即输入输出端口)与传输系统相连。DXC的核心部分是交叉连接功能，参与交叉连接的速率一般等于或低于接入速率。交叉连接速率与接入速率之间的转换需要由复用和解复用功能来完成。首先，每个输入信号被解复用成m个并行的交叉连接信号。然后，内部的交叉连接网采用时隙交换技术(TSI)，按照预先存放的交叉连接图或动态计算的交叉连接图对这些交叉连接通道进行重新安排，最后再利用复用功能将这些重新安排后的信号复用成高速信号输出。整个交叉连接过程由连至DXC的本地操作系统或连至电信管理网(TMN)的支持设备进行控制和维护。

图 1 DXC的简化结构 
2 DXC建模
　　下面将详细描述用于管理一个DXC的信息模型。它是根据一些标准提供的结构进行分类的。这些标准依赖于信息
　　模型"类组"的概念，"类组"就是把一套完备的对象类，相关的包、属性、动作、标识、参数、名字绑定和抽象语法概念组合起来去描述一个给定的功能区。本文所论述的类组有：设备类组、交叉连接类组、性能类组、供给对象类组。
2.1 设备类组
　　这种类组是由包含和模块化与DXC和设备管理相关的功能的对象类组成。在这个范畴中，设备由机架、网卡和所有那些物理单元表示，它们构成了DXC，并且可由远端OS进行配置、监控等等。这个类组包含以下对象类：
　　DXC equipment--这个对象类比其它对象类更加重要，而且与DXC更有关系。它是由ETSI定义的，在对象类equipment基础上表示和管理DXC设备的特殊功能。这个对象类的实例和包括可替换单元的通信物理源相关。但是，它们能在其代表的物理源没有被安装时创建。这个功能对于配置管理的目的和许可是很有用的，例如，管理系统建立断线的特殊DXC配置，把它存储在文件中，下载这个文件到DXC中、当各自的单元被接通时将它们投入服务。为了这个目的，equipmentExpected属性包含一个与在由设备对象实例表示的特殊槽位中可能被接通的所有那些单元(卡)通信的值。
下面提到了3个属性：
　　affectedByObjectList--这个属性指向所有那些源，包括物理的和逻辑的，像中断点就可能被支持它们的对象实例的状态改变所影响。
equipmentExpected--这个属性包含适合于由对象类所代表的特殊槽位的设备(像网卡)的值。
equipmentActual--这个属性代表了确实插在由对象类所代表的槽位中的网卡。但不适合那个槽位的网卡插在那个槽位时(也就是说，当equipmentActual的值不匹配equipmentExpected的值时)，将发出告警并通知管理者。
　　DXCEquipment对象类的行为在这里没有详述，留给使用者空间去判断可能危害管理接口的互操作性的事件。这些例子描述如下：
　　.哪一个系统正在控制创建DXCEquipment实例(是NE还是OS)？
　　.什么时候DXCEquipment实例被创建？
　　.当一个实例被创建时，哪个值分配给状态属性？
　　.包含所有下列属性的状态转换表的定义：operationalState、availabilityStatus、equipmentExpected和equipmentActual。
　　表示DXCEquipment对象类的其它属性用于表示设备的位置(例如在NE中)、操作者给出的详细值、版本号等等。
2.2 交叉连接类组
　　这个类组是由ITU模块化的，它允许管理者在各种设备中监控交叉连接功能特性。由于它没有描述特殊DXC功能，下面仅提供由ITU定义的交叉连接类组的概况。这个类组是由以下对象类组成的：
　　Fabric--这个对象类代表两个功能：分配TTPs(Trail Termination Point跟踪中断点)到TTPs组(GTPs)的能力和在中断点间建立交叉连接的能力。
　　CrossConnection--这个对象类代表了在连接两个像中断点一样的两个实体之间的分配关系。
　　Group of Termination Points(GTPs)--于特殊管理目的，这个对象代表了单个单元的中断点组。
　　Pool of termination points(TpPool)－这个对象代表TTPs或GTPs的协会。
2.3 性能类组
　　电信网络的重要管理功能之一是性能监控，也就是说，在网络或DXC中在给定集合的监控点上管理性能事件。一旦性能数据被收集，它们就会以QoS的告警形式报告给相关的管理系统。
　　为了DXC性能监控目的，必须注意几个监控点：
　　①更新部分中断点，②电的和光的物理接口中断点，③复用部分中断点，④保护交换，⑤路径中断，⑥复用部分适配器。
　　对于每一种监控点，两个对象类需要定义。它们起源于管理对象currentData(ITU的Q.822建议)。
　　DXCCurrentData－出于DXC性能管理目的，这个对象类被定义包含一般特性，而且每个被监控点需要定义子类。被管理的性能监控事件的实例是差错秒(ESs)，严重差错秒(SESs)等等。granularityPeriod属性用于表示性能数据采集频率(例如，每15分钟或24小时)。如果在一个粒度时期的结束时，通过一个给定的门限，这个对象类就会发出一个通知而且门限通过告警就会暗中被清除。当这个对象类的实例代表一天的数据采集时期时，它们也会报告难以获得时期的开始和结束。其他子类(例如更新部分当前数据门限复位rsCurrentDataTR)仅有一个粒度时期而且在一个粒度时期的结束时执行外在的门限告警清除。
　　对于每一个被监控点，一个更深的对象类被定义，它起源于ITU的Q.822建议，叫historyData。它在每一个粒度时期结束时存储被观察的性能事件。因此历史信息能被采集，既作为historyData实例的部分，又作为包含在一个日志中的eventRecord子类。
2.4 供给对象类组
　　这个类组由ETSI定义。它包含两个对象类，即：①电源供给--这个对象类描述DXC提供电源给它内部元素的功能。powerSource属性描述当前被NE所用的电源供给器(例如，电池)，然而poweredEquipmentPtrList指向所有那些靠资源供给电源、靠对象类描述的NE资源。②时间同步器--这个对象类模拟同步发生资源的选择和NE中的分配。这个对象被设计成管理者能选择内部振荡器和外部资源之间的时间资源(即从属的或外部的振荡器)。
3 网络管理
3.1 典型网络管理等级
　　如图2所示，一个典型的DXC网络管理等级有3层，从上到下依次为网络管理层(又称网络控制层，简称NCL)，单元管理层(EM)和网络单元层(NE)。

图2 网络管理等级
　　(1) 网络管理层 DXC的网络管理层负责对所辖网络进行集中式或分布式控制管理，例如电源供给、网络监视和网络分析统计等功能可以实现集中控制，而维护、告警处理和保护等功能则可以分配给地区性管理中心来控制。通常，网络管理层具备DXC所要求的主要应用管理功能，即具有中央管理、监视、控制和恢复包含E1/T1传输线路和DS0线路的数字网络的功能。
　　(2) 单元管理层 考虑到对不同网络单元有不同的管理需要，希望管理功能能从个别类型的网络单元中独立出来,从而形成单元管理层。DXC的单元管理层直接控制设备，其管理控制功能由网络管理层分配，诸如状态显示、告警过滤和时隙交接等。主要目标是减少直接流进网络管理系统的信息流，防止过载，同时尽量加快网络响应速度。
　　(3) 网络单元 网络单元本身一般也具有一些管理功能。特别是在分布式管理系统中，网络管理系统可能把很多管理功能经软件下载给DXC，使DXC具有很强的管理功能。此时，网络对各种发生事件的反应十分迅速，特别是用于保护目的的路由恢复可以实时完成，使时隙交接不受影响。
4 DXC的网络管理系统
4.1 网络管理平台的选择
　　原来的DXC的网络管理系统大多基于工作站，造价比较高，使用的UNIX操作系统很不易学，而且是全英文界面，不易读懂，操作起来很复杂，让人感觉很不友好，最大的缺点是软件所用的数据库和DXC自身的数据库不统一，不开放，不能修改。
　　基于上述缺点，本软件采用的是普通的PC机，造价便宜，所用Windows 95和Windows NT，界面友好，硬件配置不需要太高，而且采用全中文图形化界面，容易读懂，容易操作，所用的数据库全面开放，可以修改到和DXC内部数据库相统一。
4.2 开发环境
　　本软件是在通用的Pentium计算机上开发及运行的，客户端软件是用PowerBuilder 5.0开发工具开发的，它采用标准数据库接口SQL语言，使用ODBC通过网络使用TCP/IP协议对Microsoft SQL数据库进行读写操作。服务器软件是用Visual C++ 5.0开发工具开发的，它通过X.25网卡同网络上的数字交叉连接设备(DXC)进行连接，可以发送命令给远端设备，也可以从远端设备处接收返回的信息。并且也可以对Microsoft SQL数据库进行读写操作。在特殊情况下能够单独通过拨号方式同设备连接进行临时管理。
　　用户可以通过客户端软件经过网络将指令写入服务器上的数据库，服务器上的服务器软件检测到数据库被修改，读出该指令，通过X.25网卡将指令发给远端的DXC，远端DXC接收到指令，返回信息给X.25网卡，服务器软件从X.25网卡的缓冲区中收到指令的应答，将它写入数据库，用户就可以通过客户端软件从服务器上的数据库中读到该指令的应答信息。
　　由于Visual C++ 5.0本身就是一个面向对象的语言，所以本软件根据前面提到的信息模型，创建了设备类组，交叉连接类组、性能类组、供给对象类组和功能区域类组，并将每一个类组中的对象类加以完善。例如在功能区域类组中就定义了一个告警显示对象类，这个对象类中的各个函数用来处理不同的告警显示。而且在对数据库进行操作中，都是定义一个对象类来指向一个数据库，这个对象类中的不同函数可以对数据库进行增、删、改、查等多种操作。
4.3 用户接口
　　本软件的用户接口采用级联的菜单方式，用鼠标或键盘进行选择，重叠窗口方式允许屏幕上同时显示多种表格形式和网络图。用户通过普通的PC机就可以接入和管理这些网络数据和状态，显示屏上的网络图由节点(DXC或复用器等)和节点间链路组成。此外，用户还可以利用该软件提供的虚拟工作接口终端特性同时接入多个网络单元，询问节点状态信息和直接发送DXC的命令。
4.4 管理功能
　　本软件不仅具有终端所具有的一切功能，而且完成了对数字交叉连接设备的实时告警和状态的图形化显示，时隙连接建立情况的显示，历史记录的查询，两兆的操作，交叉连接的操作，还增加了安全管理、用户管理、数据库管理、拓扑管理和故障管理。
　　告警的显示包括常规告警和详细告警。常规告警包括严重告警、主要告警、次要告警和主控器告警。详细告警包括同步告警、交接单元告警、单元告警、模块告警和两兆告警。不同的颜色代表不同的告警：黄色代表该设备处于小告警状态，红色代表该设备处于告警状态。
　　状态的显示包括主控器状态、同步状态、交接单元状态，单元状态、模块状态和两兆状态。不同的颜色代表不同的状态：灰色代表该设备处于未配置状态，白色代表该设备处于退出服务状态，绿色代表该设备处于正常工作状态。
　　时隙连接建立情况的显示中的时隙个数可以达到16个单元的4个模块的32个两兆的32个时隙共65536个时隙。显示包括该时隙是否被占用、与哪一个时隙连接、连接的类型等等。
　　历史记录的查询可以使用户详细地知道哪一天在哪一个DXC上有哪一个用户曾经登录，发过什么指令，收到过什么返回信息等等。
　　两兆的操作包括两兆的建立、投入、退出和拆除，可以实现一个和多个的两兆操作，并可以指定两兆的类型，显示当前两兆的状态，添加可选参数等等。而且能够达到操作智能，如未建立则不能投入，未投入不能退出，未退出不能拆除等等。
　　交叉连接的操作同样包括交叉连接的建立、投入、退出和拆除，可以设置交叉类型(双向、单向和广播)、带宽(DS0，E1和N层DS0)、分支路(最多可达8个)和多种可选参数等等，并同时具备操作智能。
　　安全管理涉及注册、口令和安全等级等。关键是要防止未经许可的与DXC的通信，并允许安全地接入DXC的数据库。用户管理有两个等级：普通用户和超级用户。超级用户可以增加用户、删除用户、修改用户的口令和权限，使得不同用户所得到的界面和具有的功能是不同的。数据库管理是指超级用户可以修改各别数据库中的某些值，这是为了避免用户用菜单发指令与用终端发指令和不同用户发指令所造成的数据库的不一致。而且还支持数据库以表格的形式输出。
　　拓扑管理是指能够显示网络中多个DXC的拓扑结构，可以创建非DXC的其他设备，以保证拓扑结构的完整性。并且能够修改和删除网络拓扑图的逻辑节点、线路、通道和支路等。用户可以按一个一个节点的手工方式或只指出通道起始节点和终端节点的自动方式在自己的网络中产生通道。
　　故障管理是指能够处理和控制DXC中出现的大量事件并进而帮助用户在严重网络故障条件下选择替代路由。并且能够完成自动设备告警及显示功能，可抑制不需显示的告警，实现人工智能故障诊断及中文显示功能和路由保护功能。
5 结束语
　　虽然该软件目前仅适用于DXC及其类似的网元，但是我们所用的面向对象的技术同样适用于TMN中的其他网元，所以在不久的将来，我们的网管软件将能管理TMN中所有的网元，成为TMN的网络管理系统。
作者简介：向海明 男，23岁，研究生，主要研究计算机网络
作者单位：上海铁道大学计算机系 上海 200331
参考文献
1 ITU Recommendation M.3100.Generic Network InformationModel.1992
2 ITU Recommendation Q.822.Stage 1，Stage 2 and Stage 3 Des-cription for the Q3 Interface: Performance Management. 1993
3 ITU Recommendation M.2120.Digital Path,Section and Transm-ission System Fault Detection and Localisation Procedures.1992
收稿日期：1998-08-17
