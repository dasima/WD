软件学报
JOURNAL OF SOFTWARE
1999年　第10卷　第11期　Vol.10　No.11　1999



一个基于Web的工作流管理系统
史美林　杨光信 向 勇 伍尚广
　　摘要　Internet/Intranet/WWW技术的日渐成熟以及资源、应用的日益丰富,为工作流管理系统的构造提供了一个理想的计算环境.在这种易于访问、无处不在的计算环境中,人们可以通过工作流管理系统将各种分布式的信息资源有效地集成、协调起来,以促使企业业务目标的高效实现.文章描述了一个基于Web而构造的通用工作流管理系统Wowww!(workflow on the world wide web),详细讨论了其体系结构的设计、工作流模型及过程实例的执行算法,并讨论了Wowww!为提高其可用性和灵活性而实现的工作流过程定义的自学习算法以及为提高系统的协作支持能力而采取的对同步协作的支持方法.
　　 关键词　工作流管理系统,计算机支持的协同工作,workflow on the world wide web,Internet,WWW.
　　中图法分类号　TP393
A Web-based Workflow Management System
SHI Mei-lin YANG Guang-xin XIANG Yong WU Shang-guang
(Department of Computer Science and Technology Tsinghua University Beijing 100084)
　　Abstract　 As the Internet/Intranet/WWW technologies become more and more mature and web-based applications become richer and richer, the application developers are provided with an ideal computing environment to construct WfMSs (workflow management systems). Web-based WfMSs can help business goals to be achieved effectively by means of integrating various distributed resources in an easy to access environment. A web-based general purpose workflow management system named Wowww! is described in this paper, detailing its architecture, the workflow model and the algorithms used for workflow instance execution, the self-learning algorithm for automatic process definition generation, and the strategies to support synchronous cooperation.
　　Key words　Workflow management system, computer supported cooperative work, workflow on the world wide web, Internet, WWW.
　　进入90年代中后期,随着Internet技术的成熟,以企业Intranet计算环境为基础建立起了各种信息资源,如WWW、数据库、电子邮件、目录服务、电话、传真系统等.但这些资源基本上是相互独立的,意即它们很少能够意识到其他信息资源的存在（除非用特定的软件系统将它们连接起来）.工作流管理系统［1］（workflow management system,简称WfMS）着眼于协调企业内的各种资源（包括信息资源和人力资源）,试图使各种业务活动在一定程度上自动进行,以高效地达成企业的业务目标.如果能够以Internet/Intranet为基础构造WfMS,实现企业Intranet环境下各种资源的高效协调,将能够最大限度地发挥这些资源的综合潜力,为企业的业务目标服务.同时,WWW为Internet/Intranet资源的访问提供了非常方便的手段,Java技术的成熟为开发跨平台的交互式应用提供了理想的开发工具.因此,基于Internet/WWW计算环境来构造WfMS将成为一种理想的选择.本文介绍一个基于WWW的工作流管理系统:Wowww!――Workflow on the World Wide Web.
1 Wowww!体系结构
　　Wowww!体系结构的设计主要遵循如下几条原则:
　　.基于Internet/Intranet/WWW分布式计算环境,面向跨企业或机构的大型分布式工作流管理.
　　.集成已有的各种信息资源,如WWW、数据库、电子邮件、目录服务以及电话系统等,充分发挥这些资源的综合潜力.
　　.与工作流管理联盟（workflow management coalition）,参考模型［2～6］保持一致,以利于实现与其他WfMS系统的互连与互操作.
1.1 Wowww!总体结构
　　按照上述原则所设计的Wowww!的总体结构如图1所示,图中各宽带状的箭头表示各组成部分之间的通信方式.整个系统采用的实际上是一种客户机/服务器结构.在目前的实现中,Wowww!服务器以一种服务的方式运行于WinNT环境下,它将完成工作流实例的执行、资源的集成以及各种控制数据和实例数据的管理.集成式工作流应用及开发环境（IWADE）给用户提供了一组用于开发工作流应用、处理工作项、对工作流实例进行管理的工具,具体包括过程及表单定义、工作项处理、服务器管理、过程实例监控以及Internet E-Mail客户端和联机帮助.它以Java Applet的形式运行于支持Java的Web浏览器中,并绕过Web服务器而直接与Wowww!服务器通信,以避免CGI或ISAPI或NSAPI实现所带来的低效率,但并不排除开发人员可以借助这些方式将工作流服务器中的各种对象和数据通过WAPI［5］（workflow API）以HTML的形式显示在Web浏览器中.

图1 Wowww!体系结构
1.2 Wowww!服务器结构
　　处于Wowww!核心的是一个多线程的工作流服务器,它包括如图2所示的5个主要部分.其主要作用是,在业务流程的形式化表示的驱动下,实现流程中的各个环节之间的状态转换及数据的传递,以使这些环节按照一定的顺序在用户的参与下依次完成.通信管理模块接收网络数据包,并将其交给其他相应的模块进行处理;会话管理模块负责管理IWADE与服务器之间的会话连接以及同步协作组的维护,以实现对过程定义、表单和工作项的同步编辑.这些以及其他类型的数据都是以C++对象的形式实现的,并由Wowww!服务器的面向对象的数据管理模块维护.这些对象被工作流执行控制模块用于过程实例的执行控制中,如实例的启动、不同活动状态之间的转换、用户工作项的生成以及对外部资源的访问等.不同的功能模块将分别运行于不同的线程中.各模块之间通过消息传递的方式进行通信.这种单进程、多线程的结构对于提高工作流过程实例执行的并发性、支持大规模的工作流管理起着至关重要的作用.

图2 Wowww!服务器结构
1.3 服务器端资源集成
　　前面提到过,在Internet/Intranet环境下已建立起大量的各种类型的信息系统,并且人们工作的完成将依赖于对这些信息系统的访问.为了实现协调多个人活动的目标,工作流管理系统必须提供一种访问各种类型异构资源的一致的方法.在Wowww!中使用了一种被称做“资源代理池”的机制.资源代理池实际上充当的是Wowww!工作流执行控制模块与其他信息系统的一个中介,它由一系列“ 资源代理”构成.每一种类型的资源代理负责完成对某种特定类型资源的访问,并给工作流执行控制模块提供相应的接口.例如,邮件系统代理可向其他SMTP服务器发送并收取邮件,它所提供的接口中包括SendMail,GetMailList,GetMail等操作.有了邮件系统代理之后,工作流执行控制模块就能够同邮件系统进行交互,以实现它的一些关键性的功能,如通知某个用户,他/她需要处理某个亟待处理的工作项等.
资源代理可以按同步及异步两种不同的方式来处理执行控制模块发送给它的请求.它们都是以COM组件的形式来实现的,因此可实现动态的“ 插拔”与配置.这种可动态扩展的特点一方面让人们可以根据需要将分布在Internet/Intranet环境下的资源纳入到Wowww!所协调的范畴中,另一方面可以突破Java Applet只能访问它们所来自的主机系统上的资源的限制.
1.4 客户端应用集成
　　在不同的领域中,人们用以完成他们的日常工作所用的应用程序也是各不相同的.工程设计人员应用某种类型的CAD工具去建立一些工程设计对象,而从事写作的人将使用某种类型的字处理软件去输入文档内容,并对其进行格式化.为了实现协调多个具有不同业务兴趣与范围的人的活动目标,工作流管理系统必须能够尽可能多地集成各种不同类型的应用.在Wowww!中,这一点是借助于“应用表单”的机制来实现的.应用表单实际上是供某个或某组用户用以处理某特定任务的一组应用程序的集合.所有这些应用程序都是以JavaBean组件的形式加以实现的.应用开发人员可以用IWADE所提供的表单定义工具,将这些应用组合起来,并设置各应用在表单中出现的格式.在过程实例的运行过程中,IWADE将解释表单的定义,并根据相应的JavaBean的类定义生成相应的用户界面元素,供用户完成他们的任务.当然,为了能够将这些JavaBean组件形式的应用程序成功地集成到应用表单中来,它们必须实现一个特定的接口,以便IWADE能够设置其初始数据,并获得其最终的处理结果.这种特点使得IWADE成为一个能够包容大量不同应用、并可由用户进行扩展的框架.但目前的实现由于受Java Applet无法访问本地应用资源的限制而没有考虑对其他类型应用（如各种桌面应用）的集成.
2 Wowww!工作流模型
　　WfMS协调业务流程的完成是以业务流程的形式化表示――工作流过程定义为基础的.不同的WfMS用以描述过程定义的形式化模型各不相同.常用的有有向图［7］、PetriNet［8］、对象模型［9］、带有约束条件的文法表示［10］等.这些模型在描述能力、使用的方便程度以及易修改程度等方面各不相同.但一个好的模型既应能够描述结构化的过程,也应能够描述非结构化的过程,同时还应提供足够的灵活性以便能够处理可能发生的变化及例外情况.综合考虑这几方面的因素,Wowww!提出并实现了一种“ 条件化有向图”的工作流模型.这种模型用有向图中的各结点表示工作流过程中的各个环节,而用有向边来描述各环节之间的控制及数据流动关系.下面给出此模型的形式化描述.
　　定义1. 命名值v为一个四元组〈n,t,l,v〉,其中n为一个字符串,它表示值的名称;t为值类型;l为值的字节长度;v为值.命名值表示的是某种类型的简单数据对象.在目前的实现中,t可以是10种类型的简单数据类型（即boolean,char,short,int,long,string,float,double,datetime和binary）之一.用表示所有命名值构成的集合,定义,则Vnφn()可以表示一个任意复杂的数据对象,其中n为任意非负整数.在Wowww!中,我们使用V0（简写为V）来表示每一个活动中待处理的数据对象.
　　定义2. 命名表达式e为一个三元组〈n,t,e〉,其中n为表达式名称;t为表达式的值类型（可为上述10种基本类型以及一个特殊的void类型）;e为表示表达式的字符串.表达式的构成元素可以是常量（如boolean类型的true和false、字符串常量及各种类型的数值常量等）、变量（某个命名值的名称）、运算符、各种类型的预定义的函数（如字符串函数、日期函数、数值函数以及Wowww!服务器所提供的系统函数等）、资源代理所提供的接口中的操作、Wowww!所能访问的Windows可执行模块或COM/DCOM组件所提供的接口中的操作等.用E表示多个命名表达式构成的集合.对于给定e,定义一算子Eval:EV,Eval(e)=v,其中nv=ne;tv=te;vv为根据ee计算得到的值;而lv则为此值的长度.
　　定义3. 应用表单f为一个三元组〈n,p,T〉,其中n为表单名称;p为表单的各种属性（如大小、背景、字体等）;T为包含在f中的所有应用程序工具构成的集合.对于T中的每一个元素t（称之为f中的一个域）,可用一个三元组〈n,p,t〉表示,其中n为用户给t指定的在T内唯一的名称;p为域的格式;而t为域的类型.每种可以包含到表单中的域均是以JavaBean组件的形式实现的,并提供相应的接口,供IWADE运行时系统设置其初始值、取得其最终结果和值类型以及处理键盘和鼠标消息等.目前已实现的域包括单行或多行编辑框、RTF编辑器、HTML编辑器、列表框、复选框、单选钮、数据库控件（用以访问各种类型的数据库中数据）、电子白板（用以支持同步讨论）等.每一个域t实际上提供了显示和修改某个命名值v的一个用户界面,而应用表单f则表示了在某活动中需要处理的一项任务.对于给定的f,可定义一算子GenValue:,GenValue(f)=V,并满足如下条件:t∈Tf,若t所产生的值不空,则!v∈V,使得nv=nt,tv=t.GetValueType(),vv=t.GetValue(),并且lv为vv的长度.
　　定义4. 接收者r描述的是可以参加到某活动中的用户或用户组.其形式化表示为一个四元组〈r,t,n,a〉,其中r为接收者名称;t为类型,如单个用户、工作组或角色.工作组指的是,具有某种特定语义的一组用户的集合.Wowww!所支持的工作组包括普通工作组、带权重工作组（工作任务按一定的权重在成员之间分配）、串行或并行工作组、同步协同工作组（成员可以通过实时协作的方式完成对某工作项的处理）等.角色则指系统中具有某种特定职责的用户,它实际上是一个由系统目录和Wowww!所提供的系统函数所定义的表达式.n为通知方式,它描述的是在发生了某种类型的事件时可按什么方式（如用电子邮件或传呼）发出通知;a指定了可将通知发至何处（如某个电子邮件地址或传呼号等）.当tr不是单个用户时,rr可以是某个工作组的名称或一个角色表达式.用R表示可以参加到某个活动中的所有用户的集合.
　　定义5. 活动a表示业务过程中一个实际或抽象的工作步骤.Wowww!将其形式化为一个六元组〈n,t,s,e,R,L〉,其中n为活动名称;t为活动类型（如起始活动、原子活动或某个子过程等）;s和e均为一个布尔表达式,分别表示活动的开始和终止条件;R为可参与到此活动的所有用户集合.L中的每一个元素l表示的是a同其前驱活动之间的连接关系.l可以形式化表示为一个三元组〈a,f,M〉,其中a表示前驱活动的名称,f为用于处理从a传到a的数据对象的应用表单的名称,M描述的是如何将这些数据对象映射到f中所包含的那些域中以及R中的那些用户可按何种方式去访问这些域.对于m∈M,可以将其形式化表示为一个四元组〈t,e,o,p〉,其中t为f中某个域的名称,e为某个描述从a传到a的数据对象的命名表达式的名称,o指定如何用e所产生的值去设置t的初始值（例如,可以用此值去替换t的已有值,可将此值同t的已有值进行合并）,p指定的则是R中的用户可按何种方式去访问t（如只读、可修改等）.从上面的定义可以看出,L实际上描述的是从各前驱活动中传来的数据可以按何种方式被a中的用户进行处理.用A表示多个a构成的集合.
　　定义6. 工作流w是实际业务过程中的数学描述.Wowww!将工作流形式化为一个三元组〈n,A,F〉,其中n为工作流指定的名称,A表示从业务过程中抽象出来的所有活动构成的集合,而F为A×A×C的一个子集,它描述的是Aw中各活动之间的数据流动关系和控制流动关系.对于C中的每一个元素c,它是一个二元组〈c,E〉,其中c为一个布尔表达式,E为多个命名表达式构成的集合.c描述的是在条件cc得以满足时,激活后续的哪一个环节并将什么数据对象传给它.例如,若