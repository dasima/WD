计算机研究与发展
JOURNAL OF COMPUTER RESEARCH AND DEVELOPMENT
1999年 第36卷 第8期 Vol.36 No.8 1999



三维几何数据压缩研究进展
阎丽霞　潘志庚　石教英
摘　要　三维几何数据压缩是指对描述三维场景的模型数据进行压缩，以便于模型数据的存储和网络传输，在分布式虚拟现实、协同应用、多用户视频游戏、模型数据在计算机内部的存储和传输有着非常重要的意义.文中介绍了三维几何数据压缩方法，分面向单分辨率模型的压缩和面向多分辨率模型的压缩两类进行阐述，并讨论了当前最新的研究进展，分析了目前尚存在的问题和研究前景.
关键词　几何压缩，通用三角形网格，累进网格，累进森林剖分 
中图法分类号　TP301.6
STATE OF THE ART OF 3D GEOMETRY COMPRESSION
YAN Li-Xia, PAN Zhi-Geng, and SHI Jiao-Ying
(State Key Laboratory of CAD & CG, Zhejiang University, Hangzhou 310027)
Abstract　3D geometry compression is the technique which aims at the compression of model data in 3D scenery. It is important for distributed virtual reality，co-operation, and multi-player video games, as well as for storing and transfering data in computer. A 3D geometry compression method is introduced in this paper. Existing methods are classified into two kinds according to their usage for single-resolution model and multi-resolution model. The recent achievements of 3D compression are discussed and the existing problems are analysed.
Key words　geometry compression, generalized triangle mesh, progressive mesh, progressive forest split
1　引　言
　　随着科学技术的飞速发展，计算机网络及计算机应用技术研究的日益深入，多媒体通信技术取得了巨大的进展.多媒体通信是多媒体技术和通信技术的有机结合，是对用多媒体表示的计算机可处理信息进行表示、存储、检索和传送.多媒体通信技术的出现大大缩短了计算机和通信之间的距离，融计算机的交互性、通信的分布性和电视的真实性为一体.在多媒体通信中，对图像、视频以及音频的压缩解压缩技术进行了广泛的研究，并且已有一些实际可行的方法，而对三维图形数据的压缩技术研究则比较少.
　　三维几何数据压缩是指对描述三维场景的模型数据进行压缩，以便于模型数据的存储和网络传输，在分布式虚拟现实、协同应用、多用户视频游戏、模型数据在计算机内部的存储和传输有着非常重要的意义.事实上三维图形的信息容量有时也非常大，给存储和传输带来了严重的障碍，必须进行压缩编码才适应现有的网络传输技术，而且在一些需实时处理的应用场合更需要压缩技术的支持.
　　在计算机图形学中，描述三维物体时通常采用多边形网格表示模型.一个多边形网格表示的模型通常有以下3部分数据组成：① 几何数据，即顶点的位置坐标；② 联结关系，即每个面的顶点及面与面之间的联结关系描述；③ 特性，即各顶点的颜色、表面法向和纹理坐标等等. 压缩技术针对的也正是这几部分的数据.在当前研究中大量使用的是三角形网格组成的模型，这是由三角形的通用形式、结构简单以及大多数硬件软件的支持所决定的.图形数据的庞大对其存储和传输都带来了很大困难，并且影响一些应用（如分布式虚拟现实、协同应用）的实现.
　　自1995年Sun Microsystems的Michael Deering［1］在SIGGRAPH上发表了一篇题为Geometry Compression（几何压缩）的论文后，三维几何数据压缩技术开始受到学术界关注，并取得了一些新进展.本文结合我们的研究工作，分别对面向单分辨率模型的压缩和面向多分辨率模型的压缩技术进行综述.
2　单分辨率模型的几何数据压缩技术
　　单分辨率模型的几何数据压缩是指对物体的一种层次细节的多边形网格表示形式的几何数据进行压缩.在已有的研究方法中，以Michael Deering［1］的基于通用三角形网格的几何压缩、Stefan Gumhold［2］的三角网格连接关系实时压缩算法和Gabriel Taubin［3］的基于拓扑手术的几何压缩算法较有代表性.下面从三角形网格的几何数据表述形式出发对这3种算法加以分析.
　　三角形网格所占用的存储空间依赖于其表述方案.最简单的方案是每个三角形独立地由其3个顶点的9个坐标来表述，如果用浮点数，则需要36个字节来描述一个三角形（暂且不考虑颜色、法向、纹理坐标等属性数据），而这种表述方案使得每个顶点约需被描述6次，浪费了大量的存储空间.一种改进的方案是顶点和三角形分开表示.每个顶点用其3个浮点数表示的位置坐标确定；而每个三角形，则用三角形描述表来表示，其中每个表项仅包含该三角形的3个顶点序号.这使得存储空间得到很大程度的节省.三角形条带的引入进一步减少了不必要的顶点传输：两个相邻的三角形公用一条边，那么从第二个三角形开始，一个新顶点的加入和其前一个三角形的一条边即可构成另一三角形，这使得每个顶点最多必须传送两次.
2.1　基于通用三角形网格的几何压缩
　　三角形条带的引入大大减小了每个顶点需被引用的次数（从6次降到2次左右），但多于一次的传输对复杂模型数据来说其冗余仍是非常大的.Michael Deering［1］对三角形网格的表述形式做了进一步的优化，引入通用三角形网格，并提出基于该表述的压缩算法，主要分为以下4步：
　　(1) 将三角形网格数据转换成通用三角形网格形式
　　通用三角形网格是一种优化的三角形数据表述形式，在允许一种紧凑的几何表示的同时保持了数据的线性结构，也就是说，几何特性可以通过一次对顶点数组数据结构的扫描抽取出来.为了避免对旧顶点的重复存取，Deering引入了顶点缓冲，将旧顶点显式地推入一个队列，当再次用到时，再显式地引用.16个旧顶点的缓冲即可避免94%的旧顶点重复存取.


图1　通用三角形网格
　　(2) 量化每个顶点的位置坐标以及颜色、法向量等属性坐标
　　在对位置坐标和属性坐标的量化中，Deering对法向量编码的处理思想有其独到之处，充分利用了几何分布的对称性.首先单位球可分为8个1/8球（可用标志位来区分每个1/8球体），然后通过分别折叠平面X=Y，X=Z，Y=Z，可将每个1/8球再分为6份.经过这样的处理之后，只有1/48的球面需要逐一描述其法向，即使得法向量查找表由原来的100，000项减少为2，000项左右.


图2　球面的几何区域划分
　　(3) 邻近顶点坐标及属性坐标的差值计算
　　由于几何性质的局部性，在16位的模型空间中，一个顶点与其邻近顶点的坐标差值远远少于16位，应用这个特性，使需要占用的存储空间得到进一步缩减.同样，由于物体颜色的自然过渡和法向的平滑连接，对于RGB和N也可使用其邻近点表述值之差来进行编码.
　　(4) 对第3步得到的数据进行Huffman编码
　　位置坐标和属性坐标的差值编码可运用基于标签的可变长Huffman编码,从而得到整体压缩后的数据文件.
　　Deering 的压缩算法的主要特点是引入通用三角形网格，运用顶点缓冲使得顶点坐标几乎不被重复引用.但是在实际操作中，最优通用三角形网格的求解是比较困难的.Deering的几何压缩方法的压缩比可达6/1～10/1，而且物体失真度较小（属有损压缩）.
2.2　三角网格连接关系实时压缩
　　三角网格连接关系实时压缩是另一种面向单分辨率模型的压缩，它是由德国Tübingen大学的Gumhold［2］等提出的.在这种方法中，同样使用了顶点缓冲，但其具体压缩方法有别于Deering. Deering运用通用三角形网格的表述而避开了三角网格的连接关系，而Gumhold等正是利用连接关系，定义了一系列的搭构操作，利用顶点缓冲使得每个顶点只需传送一次.
　　三角网格连接关系实时压缩算法大致分为以下几个步骤：
　　(1) 确定遍历顺序
　　通过定义遍历顺序，可确定连接性质是深度优先（depth-first strategy）还是广度优先（breadth-first strategy）.
　　(2) 连接关系编码
　　一系列的搭构操作如“Δ”：初始搭构操作；“←”：向后连接；“→”：向前连接；“*”：新顶点；“.”：边界；“∞i”：分裂切割边界；“Uip”：切割边界组合；“”：闭合切割边界，使得三角网格的所有三角形的连接关系可被确定编码并放入位流中.
　　(3) 顶点数据处理
　　顶点数据（包括位置、法向、颜色、纹理坐标等）可相应插入位流形成整体表述，这样整个三角形网格的所有信息即可被有效编码.
　　Gumhold的算法通过定义固定的遍历顺序，使得对缓冲的索引降到最小.若对这些索引进行Huffman 编码，那么每个三角形的连接关系只需两位.Gumhold的算法提供了快速的压缩方案，使用顶点缓冲，从而在缓冲区大小为12.72时，保证每个顶点只传送一次.其压缩和解压缩的时间比仅为2/1，这主要是受益于未压缩的随机存取网格表示方式.而且，该方法的压缩比要略优于基于通用三角形网格的压缩方法，表1分别用这两种方法对5种不同对象的压缩结果进行了比较.
表1　连接关系实时压缩和基于通用三角形网格压缩方法的压缩比比较

模型物体原始大小(bits)压　缩　比
基于通用三角形网格的压缩基于连接关系的压缩
triceratops179,7045.8/17.4/1
galleon155,0648.2/111.2/1
viper1,698,1168.6/111.6/1
cherry958,1609.2/112.0/1
insect8,383,7887.2/111.4/1

2.3　基于拓扑手术方法的几何压缩
　　Gabriel Taubin和Jarek Rossignac［3］的基于拓扑手术的几何数据压缩算法也是一种针对单分辨率模型的压缩算法.该算法提出了顶点生成树和三角形生成树的概念.从构造顶点生成树出发，沿顶点树切割得到三角形树，对树的编码即得到连接关系.该算法对顶点坐标的压缩比Deering的邻近顶点差值压缩编码更进一步.压缩算法如下所述.
　　(1) 构造顶点生成树
　　选定三角网格中的一点作为顶点树的根节点，包含该节点的单连通域即为第一层边界.依此类推，第N层的三角形就是不属于小于N的任何三角形层，且包含一个或多个第N层边界顶点的三角形集合.第（N+1）层边界就是第N层三角形中那些由两顶点均不属于第N层边界的所有边组成的.这些边界边的组合并非一棵树，而是每层边界都由环组成，每个三角形层也是由围绕一周的三角形所组成的.顶点树和三角形树的构造可通过将这些环转变成螺旋状连线来实现.在使树的分支最少的前提下，选择N层边界边中的一顶点和N+1层边界边中的一顶点连接成为跨越边，即可将所有边界环连通而构造成顶点生成树.如图3所示.　　


图3　构造顶点生成树
　　(2) 顶点树编码
　　编码顶点树时，首先选定树的根节点，按预定的走向遍历顶点树的各个分支.顶点树的每一分支均由3个标志位来编码：（run length,branching bit,leaf bit）.
　　(3) 顶点坐标的压缩
　　顶点坐标的压缩充分应用了顶点树上邻近顶点坐标值的相近性，每个顶点的坐标用预测值和近似值之间的差值来编码.这个预测值是此顶点在其相应顶点树上沿遍历方向的前几个顶点的线性组合值.
　　(4) 三角形树编码
　　三角形树的编码为（run length, leaf bit），其中run length代表该分支中边的数目（即该三角条带中三角形数目加1），leaf bit标志该分支的终点是否为一个叶三角形（不再有分支）.
　　(5) 计算和压缩行进模式
　　三角形树编码时的遍历顺序已经确定了行进模式，即可表示为一系列沿三角形树向左或向右遍历的标志位，并对其进行熵编码. 
　　该算法对网格中三角形连接关系的压缩是无损的，对顶点坐标和属性坐标的压缩属有损压缩.压缩比高于前两种压缩算法，通常可达50/1.
　　在本部分中介绍了3种面向单分辨率的几何数据压缩方法，它们在算法上各有其独特之处，对其压缩结果的各项评价指标比较如表2所示.
表2　3种几何数据压缩方法性能比较

压缩算法压缩比压缩精度压缩/解压缩时间比
连接关系坐标数据
基于通用三角形网格的几何数据压缩6/1～10/1有损有损3/1
基于连接关系的几何数据实时压缩8/1～12/1无损有损2/1
基于拓扑手术的几何压缩50/1左右无损有损35/1左右

　
3　多分辨率模型的几何数据压缩 
　　多分辨率模型的压缩是面向多分辨率模型的压缩方法.多分辨率模型可分为离散多分辨率模型和连续多分辨率模型两种.离散多分辨率模型是对复杂的三角形网格通过简化算法逐步得到不同细节层次的多个三角网格模型，连续多分辨率模型则是通过一种紧凑的模型表示方法，可生成任意多个不同分辨率的模型.基于这两种不同模型，面向多分辨率模型的压缩又可分为面向离散多分辨率模型的压缩和面向连续多分辨率模型的压缩.颇具代表性的是Stefan Gumhold［4］等的离散多分辨率模型的压缩和Gabriel Taubin［5］等的累进森林剖分两种算法.
3.1　离散多分辨率模型的压缩
　　离散多分辨率模型是对复杂的三角形网格经过一系列简化操作得到了多个不同分辨率的多边形网格模型.这种简化算法通过对三角形网格施以局部的变化而逐步得到不同的细节层次(LOD)，为了保证对原始网格的足够近似，每个简化步骤都须得到控制.在Gumhold等的离散多分辨率模型压缩中，使用的误差控制计算是Hausdorff距离：
dH(X,Y)=max(d(X,Y),d(Y,X))
其中X，Y分别为两个点集合，Hausdorff 距离是一个与物体参数化方法无关的测度.在网格简化过程中，主要有3种简化算法：① 边折叠(edge collapse)； ② 三角形折叠(triangle collapse)； ③ 顶点去除(vertex decimation).


图4　片段和规则
　　基于Puppo等的MT（multi-triangulation），Gumhold等着重于进一步节省存储空间和引入局部精化，对多分辨率网格连通关系和层次关系的压缩提出了新方法，得到压缩的多分辨率模型pbMRM (pattern based multiresolution model）.其数据结构主要包括3个列表：片段（fragment）列表、顶点列表和规则列表.每一个片段中包含一个规则索引、代表连接关系的顶点索引系列以及代表层次向上和向下的链.在规则列表中每项规则包含着顶模式(ceiling pattern)和底模式(floor pattern).在对离散的多分辨率模型压缩过程中，对几何坐标数据、属性数据的压缩采用了Deering的压缩算法，而对连接关系和层次关系的压缩进行了探讨.压缩算法主要分为下述几步：
　　(1) 对网格中的连接关系进行压缩
　　应用顶点去除的简化算法，一个顶点去除操作的连接关系可以由两组三角形集来表示：一组是去除顶点且重新三角剖分的三角形集――底；一组是去除顶点前的三角形集――顶.其中的连接关系由规则表示，每个规则包含一个顶模式和一个底模式.
　　(2) 层次关系的压缩
　　由于在pbMRM中三角形隐含地保存在规则中，层次关系的描述就运用片段之间的链来保存.每个链包括一个片段索引和一个循环（指对于每个片段来说由所有覆盖它的片段所组成的循环列表）索引，这样每个顶点的层次关系大约需要3.47个链来编码，对于MT来说每个顶点的层次关系约需要24个顶点索引.pbMRM的解决方案在层次关系的处理上节约了5.5倍的存储空间.
　　(3) 片段和顶点的排序
　　片段列表：　　　顶点列表：
　　对片段排序的顺序与由简化算法引入的片段集的顺序相反，也即：简化算法产生的片段序列顺序：，则片段的顺序应排列为.确定当前三角网格中的片段必须要能获得片段的相应顶点，故顶点集的排序方向应与片段集的排序方向相同.
　　离散多分辨率模型压缩算法的误差主要通过分辨率因子c来控制.在使用顶点去除的算法中，每次算法去除一个顶点，生成的空洞被重新三角剖分，而原始的三角形网格与重新剖分的三角网格之间的Hausdorff距离必须控制在误差范围内.在pbMRM中，对于片段f，设定其对一个三角网格的全局近似误差为其顶部的Hausdorff.即：.对于原始输入的三角形网格，可在分辨率许可的条件下用顶点去除的方法不断粗化，从而得到压缩后的三角网格剖分.
　　pbMRM对存储空间的需求比MT小6倍，其细化过程和粗化过程每秒可以插入或去除18,000个顶点，对于每秒30帧的传送速度来说，即每帧可插入或去除600个顶点，这种速度对实时处理来说是可以接受的.
3.2　累进森林剖分压缩
　　Taubin［5］等1998年提出了累进森林剖分压缩（progressive forest split compression）的算法.这种算法采用了比Hoppe［6］等的累进网格（progressive mesh）更为复杂的细化操作，能更加有效地进行压缩编码.该方案的特点是在存储和传送以累进的、深度压缩形式存放的三角网格时采用了一种适应性的精化方法，这种方法容许连续的、不同细节层次的精化模型之间的光滑过渡.
3.2.1　森林剖分操作
　　森林剖分可以看作是将一系列连续的边分裂操作形成为一个集合，而不是作为一系列独立的操作.具体实施森林剖分操作包括①　沿森林的边切割网格；②　将树边界回路三角剖分；③　将新顶点移至新位置.
3.2.2　森林剖分压缩
　　PFS格式中的多分辨率网格是由一个初始的低分辨率的LOD加上一系列的森林剖分操作组成的.由于PFS表述方案是TS（topological surgery）的拓展和延伸，在PFS中初始的最低分辨率模型的表述采用的是TS方案.整个压缩算法的流程如下所示.
　　（1） 对最低分辨率模型的压缩和编码
　　在最低一级分辨率的模型中，顶点的位置是由顶点生成树沿遍历顺序的该顶点的前几个顶点的线性组合通过计算得到的.顶点数据的压缩是通过存储实际值和预测值之间的误差的Huffman编码得到的.如下所示：

其中ε(Vn)是该顶点的位置坐标的修正，Pn是顶点位置的预测值，Vn-1, ..., Vn-k是该顶点沿着朝向顶点生成树根部路径的前导K个顶点.
　　（2） 依森林剖分操作的顺序对数据进行压缩和编码
　　这一操作又分为以下3部分：
　　① 对森林的编码.对森林的编码每边需要一位.如：1代表该边属于此森林，否则为0.这些标志位放入以边索引为序的压缩数据流中；
　　② 对简单多边形的编码.对剖分森林产生的简单多边形编码综合采用了变长编码（三角形树加上一个marching bits）和定长编码（2位一个三角形）方案，从中选择一个较短的编码放入压缩数据流中，并附加一位来说明采用的编码方式；
　　③ 对顶点偏移的压缩和编码.坐标位置信息以顶点树的遍历方向为顺序存放在压缩的数据流中.而在以后的森林剖分操作中，顶点坐标也不存储坐标的绝对值，而是存储该顶点相对于一个包含所有层次细节的全局包围盒的坐标差值（森林剖分操作前后），然后再进行Huffman编码.每次森林剖分操作对应着不同的Huffman表.每次森林剖分操作所引起的顶点位置的变化可以通过将顶点编码的全局预测误差值加上一个修正值.
3.2.3　单分辨率三角网格向PFS格式的转换
　　将单分辨率三角网格转换为PFS格式所用的简化算法是基于边折叠（edge collapse）的修正算法，对即将进行边折叠的边进行两个附加的拓扑条件测试，若通过测试，则进行边折叠操作.测试分为两步：①　该边进行折叠操作后，余下的三角网格的连通部分是否由简单多边形组成；②　若第一步为肯定答案，测试是否有顶点被等于或多于两个的连通部分共享.若第二步为否定答案，则通过测试，该边可进行折叠操作.折叠操作后优先队列和数据结构更新，重新进行队列中边的测试，直到队列中的元素全部为空.在森林剖分操作中每个细化过程T个三角形组成的网格最多加入T个三角形.那么，其逆过程――带有两个测试条件的粗化过程中每次得到的网格中的三角形数目不能少于原始网格中三角形数量的一半.
　　PFS算法是一种自适应精化方案，支持累进存储和传输，与累进网格相比更加节省存储空间.
4　结　　语
　　几何数据压缩旨在尽量保持物体原来特性的情况下，使物体几何信息所需要的存储空间减为最小.从前面的介绍可知，研究人员在这个研究方向已取得了多项有意义的研究成果.但是，已有的算法也存在一些不足之处，尚待继续研究探讨：
　　（1） Deering的通用三角形网格是将通用三角形条带扩展为增加一个4位的地址缓冲以及引入一组新的操作而得到的.其4位的地址缓冲可允许对16个最近访问的顶点寻址，而新操作则可以直接访问这些旧顶点.在Deering提出的压缩格式中拓扑信息丢失了，所以不能简单地同那些保存拓扑信息的压缩技术比较对存储空间的需求.另外，在几何学上，最优通用三角形条带和最优通用三角形网格的求解是颇具挑战性的计算几何问题，实际上，最优通用三角形条带（三角形的哈密顿路径）在图论上已证明是一个NP完全问题.目前尚未有关于最优通用三角形网格生成研究的论文发表.
　　（2） 在分布式图形应用中，针对多分辨率模型，累进传输是一个非常有效的传送措施.该方案的思想是首先传输LOD层次中一个最低分辨率的模型，然后在绘制操作开始的同时传送一系列的细化操作.逐步细化的LOD显示可以与更加细化LOD操作信息的传送同步进行，减少了操作人员的等待时间.但是由于累进传输对全局状态设置的要求以及累进传输受到传输速度的制约，使得累进传输的研究进展较为缓慢.
　　相信随着研究的逐步深入，会使得几何压缩的算法更加成熟和先进，更能满足网络几何图形传输、分布式虚拟环境、电子购物等的应用需求，进一步推动计算机图形学向前发展.
作者简介：阎丽霞，女，1971年10月生，博士研究生，主要研究方向为计算机图形学、虚拟现实、多媒体技术.潘志庚，男，1965年12月生，教授，博士生导师，研究领域为计算机图形学、虚拟现实、多媒体技术.石教英，男，1937年生，教授，博士生导师，研究领域为计算机图形学、科学计算可视化、虚拟现实、多媒体及体系结构.
作者单位：Ｌ阎丽霞　潘志庚　石教英　浙江大学CAD & CG国家重点实验室　杭州　310027
参考文献
1　　Deering M. Geometry compression. In: Computer Graphics Proceedings, Annual Conference Series. New York: ACM SIGGRAPH, ACM Press, 1995. 13～20
2　　Stefan Gumhold, Wolfgany Stro　　β　　er. Real time compression of triangle mesh connectivity. In: Computer Graphics Proceedings, Annual Conference Series. New York: ACM SIGGRAPH, ACM Press, 1998. 133～140
3　　Taubin G, Rossignac J. Geometry compression through topological surgery. ACM Transactions on Graphics, 1998, 17(2): 84～115
4　　Stefan Gumhold, Reinhard Klein. Compression of discrete multiresolution models. Tech Rep: WSI-98-1. WSI-GRIS, 1998
5　　Taubin G, Andre Gueziec, William Horn et al. Progressive forest split compression. In: Computer Graphics Proceedings, Annual Conference Series. New York: ACM SIGGRAPH, ACM Press, 1998. 123～132
6　　Hoppe H. Progressive meshes. In: Computer Graphics Proceedings, Annual Conference Series (Siggraph'96). New York: ACM SIGGRAPH, ACM Press, 1996. 99～108
7　　Taubin G. A signal processing approach to fair surface design. In: Computer Graphics Proceedings, Annual Conference Series (Siggraph'95), New York: ACM SIGGRAPH, ACM Press, 1995. 351～358
8　　Schroeder W, Zarge J, Lorensen W. Decimation of triangle meshes. In: Computer Graphics Proceedings, Annual Conference Series (Siggraph'92), New York: ACM SIGGRAPH, ACM Press, 1992. 26(2): 65～70
9　　Hoppe H. Efficient implementation of progressive meshes. Computer & Graphics, 1998, 22(1): 27～36
10　　Schroeder W, Zarge J, Lorensen W. Decimation of triangle meshes. In: Computer Graphics Proceedings, Annual Conference Series (Siggraph'92), New York: ACM SIGGRAPH, ACM Press, 1992, 26, 65～70
11　　Garland M, Heckbert P. Surface simplification using quadric error metrics. In: Computer Graphics Proceedings, Annual Conference Series (Siggraph'97), New York: ACM SIGGRAPH, ACM Press, 1997. 209～216
12　　石教英. 国际计算机图形学与交互技术会议综述.计算机世界, 1998-09-21(4～5)
　　　(Shi Jiaoying. Brief introduction to international conf on computer graphics and interactive techniques. China Computer World, 1998-09-21(6～7))
13　　潘志庚，石教英. 多分辨率模型和三维几何压缩技术新进展. 计算机世界, 1998-09-21(6～7)
　　　(Pan Zhigeng, Shi Jiaoying. Multi-resolution model and 3D geometry compression progress. China Computer World, 1998-09-21(6～7))
14　　马小虎，潘志庚，石教英. 基于三角形移去准则的多面体简化方法. 计算机学报，1998, 21(6): 492～498
　　　(Ma Xiaohu, Pan Zhigeng, Shi Jiaoying. Polyhedral model simplification method based on triangle removal criterion. Chinese Journal of Computers(in Chinese). 1998, 21(6): 492～498)
收到日期：1998-12-15
修改日期：1999-04-12
