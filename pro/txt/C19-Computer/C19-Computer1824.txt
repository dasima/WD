微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
2000 Vol.19 No.2 P.7-9




利用定点数进行数值运算
朱丹绯　顾钟文　周春晖
摘 要： 利用80387指令和C＋＋提供的面向对象的特性，构造了定点数类，可以代替浮点数进行数值计算，能有效防止在运算中出现协处理器的浮点异常。
关键词： 定点 浮点 数值计算 80387指令
　　当前，大量的数值计算程序已经用C／C＋＋语言开发，运行于PC机的WIN32环境，然而，在此环境下用浮点数进行运算时可能产生溢出、下溢等异常，使程序退出运行。一般的数值计算程序可以从中知道算法的错误，但对于控制和仿真培训领域，如果控制算法或仿真数学模型运行中出现异常使程序终止运行，就会带来不良后果；而如果用屏蔽异常的方法，当发生溢出时，运算结果由80387设置，在随后的运算中可能产生更严重的异常。为此，本文开发了一种定点数类，用于代替浮点数进行运算，能避免出现上述问题。由于浮点数运算和这个定点数类的实现都依赖80387指令，故下面先对80387作一介绍。
1 80387简介
1．1 浮点数格式
　　在计算机里，用来表示数的位数是有限的，所以计算机不能精确地表示出所有的实数，而只能表示无穷个实数的一个极小的子集。这个子集在一般情况下已经可以解决绝大多数的实际问题，而且丢掉的精度也是微不足道的。实数的表示方法有2种：定点数和浮点数。定点数比较简单，以一个整数来实现，只不过规定了其中几位是小数部分，它所能表示的数的范围不大而且是固定不变的；浮点数可以使二进制小数点浮动，它有专门用来规定小数点位置的部分，还有用来表示数据有效数字的部分，这样在保证精度的同时，还可以有效地拓展数的表示范围。
　　80387作为浮点处理器，能处理多种整数与浮点数，如表1所示。
　　在3种浮点数中，短型实数和长型实数是IEEE754标准所定义的［2］，而临时型实数是80387内部的格式，无论给出什么样类型的数，在80387内部都将它们转化成临时型实数，由于临时型实数精度高，用这种方法，可以提高运算精度，扩大运算范围。3种浮点数格式如表2所示。
　　这3种实数分别对应于C语言中的float、double和long double类型。
　　有效数字有时被称为尾数。在80387的实数表示法中，规定任何实数只能用下面的格式表示：
　　1．xxxx×2n（x表示1或0）
表1 80387支持的数据类型［1］
数据类型位有效数字大致范围（十进制）
字的整数164－32768≤X≤32767
短型整数329－2×109≤X≤2×109
长型整数6418－9×1018≤X≤9×1018
压缩十进制（BCD）8018－99..99≤X≤99..99