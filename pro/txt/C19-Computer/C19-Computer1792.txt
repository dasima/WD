软件学报
JOURNAL OF SOFTWARE
1999年　第10卷　第11期　Vol.10　No.11　1999



软件Agent的继承性研究
樊晓聪 徐殿祥 侯建民 郑国梁
　　摘要　Agent作为一种受限的智能对象,对Agent的继承特性进行深入研究并将继承机制嵌入到AOP(agent-oriented programming)中则具有重要意义.文章基于BDI Agent模型,对软件Agent的继承性和复制行为进行了研究.从单继承和多继承两个方面给出了Agent继承的语义,将Agent实例的动态复制机制形式地划分为功能分割、逻辑分割、择优分割和返祖分割这4类,分析了每类分割方式的作用,并基于电子市场系统应用背景给出了相应的实例.
　　关键词　软件Agent,继承,复制行为,BDI模型,规划.
　　中图法分类号　TP311
Research on Inheritance of Software Agent
FAN Xiao-cong XU Dian-xiang HOU Jian-min ZHENG Guo-liang
(State Key Laboratory for Novel Software Technology Nanjing University Nanjing 210093)
(Department of Computer Science and Technology Nanjing University Nanjing 210093)
　　Abstract　 Being a kind of restricted intelligent objects, agent is a natural way to research the inheritance feature of software agent and integrate inheritance mechanisms into AOP (agent-oriented programming). Based on BDI model of agents, the semantics of inheritance and cloning behavior of agents are addressed in this paper. The semantics of inheritance are discussed from two aspects: single inheritance and multiple inheritance. For cloning behavior, the authors identify and formally classify the dynamic cloning mechanisms of agent instances into four types: function split, logic split, preference split and retrogress split. The principle of each cloning mechanism is presented and the examples are provided based on the electrical commerce systems.
　　Key words　Software agent, inheritance, cloning behavior, BDI model, plan.
　　AOP(agent-oriented programming)是一种特殊的OOP(object-oriented programming)［1～3］.Agent的心智状态、通信机制和能力分别对应于对象的状态、消息收发和操作.Wooldridge［4］认为,利用言语行为协议（speech act theory）进行协作的Agent既是推理系统,又是认知实体,它为AOP提供了自治和认知两层抽象.自治抽象揭示了Agent与主动对象之间的关系.在自治性、并发性和应激性上,两者具有近似对应关系;认知抽象与人们通常利用大众心理学来解释和预测复杂系统行为的方法相耦合.
　　但是,Agent在自治程度上优于主动对象.虽然主动对象可以根据它所处的环境来决定自身行为,从而实现控制的局部化,但其行为集是预先确定的,并且缺乏协商和学习能力;Agent的预动性(proactive)赋予其独有的规划特征,使其可以通过对底层原动作的动态规划控制自身行为,能对不可预知的事件作出合理反应.因而,Agent能更自然、更真实地模拟和解决客观世界中的问题.
　　另一方面,OOP的日益成熟也为AOP的发展提供了契机.AOP能否普及,并像OOP那样焕发强大的生命力,取决于其能否提供OOP目前所具有的特性,并在某些方面（诸如易理解性、易维护性等）能否超越OOP而提供独具的优点.由于继承性是OOP的基石,AOP能否具有继承性很自然地便成为首先要解决的问题.Crnogorac［5］意识到这一点,并初步探讨了AOP中的继承问题,使Agent的对象属性研究作为Agent方法学的一个重要方面重新得到重视,从而在一定程度上缓解了Agent研究领域两极分化的现象［6］.但Crnogorac仅局限于其中的行为保持和继承异常问题,对Agent继承中的许多细节没有充分考虑.
　　本文试图从单继承和多继承两方面对Agent的静态继承进行研究,并深入探讨Agent的动态继承-动态复制行为(cloning).第1节介绍改进的BDI模型.第2和第3节分别讨论Agent的静态继承和动态复制行为.第4节对与Agent继承有关的问题进行分析.最后概括本文的主要工作.
1 BDI模型与规划表示
　　在Agent理论研究领域,BDI模型［7］是最富有成果的Agent模型.处于动态环境中的BDI Agent通过对外界变化的不断感知,基于自身的信念产生目标,对某些目标作出承诺从而产生意念.通常将一个BDI Agent表示为〈 〉,其中和分别表示知识集（为真的信念）、初始信念集、初始目标集和静态规划集,它们由特定的Agent语言描述,用来规范Agent的静态心智特征.
　　在语法上,规划由激发事件集、语境条件集和规划体组成.可将规划p表示为元组〈pE,pC,pG〉,pE和pC分别对应于p的激发事件集和语境条件集,pG 为规划图.规划图的节点表示状态,弧表示状态转换,弧上的标记为一个三元组〈E,C,A〉,分别表示激发转换的事件、转换发生的条件和转换伴随的动作.规划图中有3类节点:1个初始节点,3种叶节点（“成功”、“失败”和“放弃”）和内节点.内节点可以是具体节点（原动作、通信语句、不确定语句等）,也可以是代表子规划体的抽象节点.抽象节点有一指针指向其扩展子图.
　　定义1.1（服务簇）. Agent的一个规划图与其中所有抽象节点的扩展子图共同构成该Agent的一个服务簇.服务簇实例化后得到具体的服务.
　　定义1.2（规划等价类≈）. 规划p和q属于同一规划等价类（记作p≈q）当且仅当pE=qE,pC=qC.
　　属于同一规划等价类的规划可以合并表示为一个类规划图,规定其中最左子规划图的优先级最高,向右依次降低,并且优先级可以动态调整（规划的成功执行使自身的优先级增加,反之则减少）.
2 静态继承
　　当通过静态继承从Agent父类产生子类时,子类可以增加新的或取消父类中已有的信念、目标和规划,也可以修改或重定义父类的规划.但新增加的信念和目标可能与父类的信念和目标存在矛盾,新定义的规划若与父类的规划同属一个等价类,也存在尝试执行的先后次序问题.按照信念修正的观点,由于新知识获取的途径已经过严格审视,从而是可以确信的.因此,当新旧知识存在矛盾时,总是放弃那些旧知识中与新知识矛盾的部分,这与开放逻辑［8］中信息的非单调更新思想也相吻合.据此可以解决父类与子类之间信念和目标的矛盾.而对属于同一等价类的父子规划的优先级问题存在不同观点.Crnogorac认为,父类的行为总能经过严格证明是正确的（规划总能正确执行）,而子类的行为尚未确定,如果优先采用子类规划可能导致失败（在高安全实时系统中不能回溯）.但是,通过继承后,父类中经过验证为可靠的行为在子类的环境中能否可靠运行？文献［9］指出,继承并不能简化验证,反而使验证工作复杂化.因此,对高安全实时系统中能否赋予Agent继承特性存在置疑.而在允许失败重试的应用中,赋予子类规划以高优先级在实现上是可行的,在效率上也是必要的,因为与父类规划相比,实现同一行为的子类规划在算法上可以针对子类的新特性进行优化.为此,我们采用赋予子类规划高优先级的方法.
　　定义2.1（静态单继承的语义）. 设〈 〉是〈 〉的子类,在类B的规范中,若其知识新定义集为;信念取消集和新定义集为和;目标取消集和新定义集为和G;规划取消集和新定义集为和,记(+和-分别表示集合的并、差运算）,则和可根据下列约束,从和得到:
　　(1) 若;
　　(2) 若;
　　(3) 若则（