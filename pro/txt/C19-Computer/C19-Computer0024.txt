计算机应用
COMPUTER APPLICATIONS
1999年 第19卷 第6期 Vol.19 No.6 1999



非绑定DBGrid的系统问题及解决方法
李来龙　罗蔚文
　　摘　要　根据实际使用VB5.0的实践，详细介绍DBGrid中的一个系统问题，主要介绍了其现象和错误之处，深入研究错误的根源，并提出解决的方法。
　　关键词　VB，DBGrid，Col，Row，标签，事件过程
1　VB并非十全十美
　　随着计算机软件和硬件的发展，人人都可以设计出符合要求的软件系统和人机界面。在当今众多可以设计人机界面的软件中，Visual Basic（简称为VB）可以说是最易学、最好用的软件之一。特别是对于非计算机专业的设计者，VB非常实用。设计者可以不了解其它的东西而直接用VB设计界面，而且VB的操作比较方便。
　　所以，当今VB的使用范围很广。但是，VB也有一些问题，甚至有错误，笔者就发现了一个，现提出问题和解决方法，以免后来者继续做这无用的工作。
2　问题的发现和现象
　　笔者前段时间开发一个桥梁检算系统，用FORTRAN语言编制了计算部分，用VB做界面。系统中有许多输入输出数据，这些数据的输入输出基本都以表格方式进行。由于FORTRAN需要的数据文件格式比较严格，所以，系统使用了非绑定式的DBGrid，用数组UserData存储表格的内容。又由于系统的表格行数和列数都是根据前面的数据确定的，不会删除和添加行或列，所以系统只用了两个事件子程序：表格数据改变后，对用于存储表格数据的数组的数据进行更新的事件过程UnboundWriteData和从数组中读取数据到表格的事件子过程UnboundReadData。这两个事件子程序都是从VB5.0中的例题拷贝过来，然后稍加改动就运用。例题的路径和名字为：D:\VB5\samples\Misc\UnBndGrd\Unbndgrd.vbp。但是，在使用一段时间后，发现问题，问题的现象如下：
　　① 每个单元的内容改变以后，如果不把光标移到其他单元，就马上卸载窗体（如按窗体右上角的关闭按钮或ALT+F4退出），再次加载该窗体时，修改过的单元内容没有改变。
　　② 经常会有这种问题出现：如果DBGrid表格的所有行都能在一屏中显示出来，不需要滚动条，在表格最后一行输入数据，移开光标后，改变处的值又变成原值；如果DBGrid表格比较大，一屏显示不完，需要滚动才能看到全部内容，在DBGrid的最后一行输入数据，移开光标后，输入单元的值未改变，但是与此单元同列的第一行单元的值变成了输入值。如果在窗体一加载就修改最后一行，肯定出现以上问题，如果从前面慢慢地修改到最后行，则不会出现这种问题。如果不是一开始就修改最后一行，在使用中有时也会出现问题，但是出现这种问题的情况没有非常明确的规律性。
　　①②两个问题经常同时出现，产生共同影响，使问题复杂化。
3　错误根源的研究
　　由于程序的代码用的是VB5.0中例题的代码，只是改变了一小部分代码，而且总的代码量很少，出问题的可能性比较小。经过长时间的检查，发现修改部分代码没有问题，问题很可能出在例题考虑不周到或者是VB软件本身。于是，笔者根据问题的现象摸索其错误根源。
　　第一个问题好解决。这个问题主要是由于对非绑定DBGrid表格更新事件（UnboundWriteData）的激发机理了解不够引起的。非绑定DBGrid用一个数组储存表格中的内容，一个单元的内容对应于数组的一个值。每当DBGrid控件中单元的内容修改，并且把光标移动到其他行后，UnboundWriteData事件就激发（移动到同一行的不同列时，不能激发）。UnboundWriteData事件激发后，在此事件过程中，对数组的内容做出修改。这个问题的解决办法比较简单，只要在DBGrid的Change事件过程中加入以下代码即可（假设存贮表格数值的数组为UserData，窗体中DBGrid控件的名称为DBGrid1）：
　　Dim I As Integer,J As Integer
I= DBGrid1.Col 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　′取列号
J=DBGrid1.Row 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　′取行号
UserData(I,J)=DBGrid1.Text　　　　　　　　　　　′把输入值赋给当前单元对应的数组单元
　　第二个问题比较麻烦。开始时，笔者以为跟第一个问题一样，有可能是有的地方考虑不周或者是第一个问题的连锁反应。但经过仔细检查，没有发现代码中有任何问题。解决第一个问题后，运行程序过程中中断程序，在Debug窗口查看数组的值发现：与改变过的单元对应的数组单元的值已经改变，与表格中输入的值一样。但是表格中显示的值还是没有变，第一行显示的仍是最后一行输入的数值。笔者想是不是改变单元内容后，DBGrid没来得及刷新表格。于是，作者在程序中加入代码，每当单元修改后，强行刷新表格。在DBGrid的AfterColEdit事件过程中加入一行代码：
　　DBGrid1.Refresh 　　　　　　　　　　　　　　　　　　　　　　　　　　′刷新DBGrid1
　　经过这样处理，运行后一看，问题解决了，最后一行能显示改变后的内容，第一行的值也不变！当时作者以为问题根除了，此后就照此用。直到有一次，笔者用到一个比较大的数组，表格中一屏显示不完，表格有滚动条，表格滚动一屏后，前面的问题又出现了，只是从最后一行输入的内容不是出现在第一行，也不是出现在最后一行，而是出现在行号等于显示行数减1的行上，列号相同（所谓显示行数就是DBGrid中不用滚动而直接可以看到的行数）。
　　经多方面检查，最终得出结论：这是VB软件本身的问题。VB的例题也有同样的问题。在VB中，DBGrid的每一个元素都有三个定位参数：行号（Row）、列号（Col）、标签（Bookmark）。列号Col很容易区别，从0到最大列依次编号。行号和标签容易混淆，是有很大区别的。行号表示某行如果显示出来时在显示行中的行号，第一个显示行的行号为0，以下依次类推，直到表格中可见的最后一行。这样，行号是可以变化的，而且对于没有显示的行是没有行号的。而某行的标签表示该行在所有行中的排号，不管是显示还是没有显示出来的。数组的第一行的标签为0，最后一行的标签为数组行数减1。
　　根本问题就出在VB软件系统中有时把最后一行的Bookmark值置为0，（特别是当窗体一启动就直接修改最后一行时）。这与第一行的Bookmark值一样，所以就出现了问题。弄清了以上Row和Bookmark的区别后，也就可以理解为何出现前面提到的问题了。
　　现在可以重新理一理出现错误的机理。如果表格内容可以用一屏显示，每当修改最后一行后，先激发UnboundReadData事件过程，然后激发UnboundWriteData时间过程，系统就把值赋给第一行，UserData数组已改变，但表格没有刷新，还是原来的内容，就出现了问题②的第一种情况。如果，表格内容一屏显示不完，每当修改最后一行后，前面的过程一样，但是滚动到第一行是，内容已经刷新，所以看到的是改变过的第一行，这就是问题②的第二种情况。
4　问题的解决方法
　　笔者经过实践，给出如下解决办法：在程序中加入代码判断当Bookmark为0时，修改行是第一行还是最后一行，用Boolean型变量Lastrow表示。根据判断的结果决定把输入值赋给数组的相应单元。具体要在各个事件程序中加的代码如下：
　　在窗体的声明部分加入以下代码：
　　Private Lastrow As Boolean　　　　　　　　　　　　′定义判断是否为最后一行的参数
　　Private mTotalRows&　　　　　　　　　　　　　　　　　　　′定义DBGird1的最大行数
　　在DBGrid1的AfterColEdit事件过程中加入以下代码：
　　If Lastrow Then
　　DBGrid1.Refresh　　　　　　　　　　　　　　　　　　　　　　　　　　′刷新DBGrid1
DBGrid1.Scroll 0, DBGrid1.VisibleRows　　　　　　　　　　　′重新滚到能看到最后一行
Lastrow = False　　　　　　　　　　　　′因为光标已经移到别处,所以把Lastrow设为False
End If
　　在DBGrid1的Change事件过程中加入以下代码：
　　Dim i As Integer, j As Integer
i = DBGrid1.Col　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　′列号
j = DBGrid1.Row 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　′行号
If DBGrid1.Bookmark = 0 Then
If j > 0 Then　　　　　　　　　　　　′如果Bookmark为0而且行号大于0，一定是最后一行
Userdata(i, mTotalRows& - 1) = DBGrid1.Text　　　　　′把输入值赋给最后一行的相应列
Lastrow = True
Else 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　′如果不是最后一行
UserData(i, DBGrid1.Bookmark) = DBGrid1.Text　　　　　　′把输入值赋给第一行的相应列
End If
Else　　　　　　　　　　　　　　　　　　　　　　　　　　　　　′如果Bookmark不等于0
UserData(i, DBGrid1.Bookmark) = DBGrid1.Text　　　　　′把输入值赋给数组的对应的元素
End If
5　实践证明可行
　　本文在实践的基础上，发现问题，研究问题，最后解决问题。得到了有效的成果，弥补了VB系统的缺陷，为以后的使用者在遇到同样的问题时提供了思想方法和解决方法，避免再走弯路。
作者简介：李来龙　硕士研究生。主要研究方向：程序设计、软件可视化技术。
罗蔚文　副教授。
作者单位：上海铁道大学土木工程系　上海（200331）
收稿日期:1998-12-25
